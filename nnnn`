[33mcommit 031912d84c618b951e0a6a51c051d6d00a3899c5[m[33m ([m[1;36mHEAD -> [m[1;32mdynamic-size[m[33m)[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 28 21:06:58 2024 +0000

    debug
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit 3d3ad35b95945c05237860a9aac563a532235ffa[m[33m ([m[1;31morigin/dynamic-size[m[33m)[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 28 19:39:28 2024 +0000

    Work
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit 0eea09101c9fa89a9a991760f7f3056beb72980a[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 28 18:47:13 2024 +0000

    Work
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit e3403a4f5951c9b0d02117cce28c0994d086a6f4[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 28 18:29:03 2024 +0000

    Work
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit 2ff3953e9ef9e15c7e22a427bcc1ae2ca88af3dd[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 28 17:22:45 2024 +0000

    debug
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit 7038c7409e17bb5aedc5dd1009ce6255a15ceb7a[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Thu May 16 01:39:47 2024 +0000

    Work
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit 0753874a8b742946437a08f41a40b90d8e1a939b[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Wed May 15 00:31:36 2024 +0000

    Work
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit 07f43b7d2feb5e7d7f3838c0ab502903acf2214d[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Wed May 15 00:26:08 2024 +0000

    Fix
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit b466dbdbf7a04d9b16fe7360de5ba57a7586c731[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 14 20:56:03 2024 +0000

    Work
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit f123c2436c35de3b84a83ec3753701861f1ea9e8[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 14 20:53:53 2024 +0000

    Work
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit c3db527d9ed18ce3b16524367f69852d5926e7e3[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 14 19:47:56 2024 +0000

    Fix
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit 22cdfb4359bbc2015f99104d8722d46cbf6ead44[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 14 19:21:26 2024 +0000

    Work
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit a1a3e99d9d9ab79f0d99b31d1209cd3adfe9e2da[m
Author: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 14 06:26:38 2024 +0000

    Work
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit ce0932baa4b3dc535ceb968cea1aca354a5b983e[m
Author: Hongchao Deng <hongchaodeng1@gmail.com>
Date:   Tue May 28 10:26:37 2024 -0700

    [core] add method to kill aws instance to simulate chaos (#45546)
    
    Signed-off-by: hongchaodeng <hongchaodeng1@gmail.com>

[33mcommit c4d6bcfbb1473fd2f81f603e283bb8e9314a63b9[m
Author: Peyton Murray <peynmurray@gmail.com>
Date:   Tue May 28 09:19:59 2024 -0700

    [Core] Add placeholder callback methods as members of RayDaskCallback (#45160)
    
    ## Why are these changes needed?
    
    This PR adds the overridable methods for `RayDaskCallback` to the base
    class.
    
    Previously, the user had a few choices for instantiating a
    `RayDaskCallback`:
    
    ```python
    RayDaskCallback(ray_presubmit=my_custom_presubmit_func)
    ```
    
    or
    
    ```python
    with RayDaskCallback(ray_presubmit=my_custom_presubmit_func) as cb:
        ...
    ```
    
    or by subclassing:
    
    ```python
    class MyCallback(RayDaskCallback):
    
        def _ray_presubmit(self, task, key, deps):
            ....
    ```
    
    Currently the constructor for `RayDaskCallback` dynamically generates
    the callback methods and attaches them to the class instance upon
    instantiation using `setattr`. This pattern doesn't work with developer
    tooling including language servers, static code analysis tools, or
    documentation generators because these functions are generated
    dynamically. Additionally the documentation for dask-on-ray instructs
    users to use the third approach (using subclassing) rather than passing
    methods to the constructor. Finally, the docstring for
    `RayDaskCallback.__init__` currently has function signatures and
    pseudo-docstrings for the callback methods the user should be
    implementing. This docstring is itself malformed, so Sphinx mistakenly
    tries to interpret parts of this as references which do not exist.
    
    At the request of @c21 I've actually implemented these functions as they
    appear in the docstring. Type hints are incomplete here, but match what
    was already in the previous docstring. I also added a summary in the
    dask-on-ray documentation.
    
    Unblocks #39658.

[33mcommit 5f01083b543272259067b2d2636cff2c2a18aa15[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Tue May 28 17:14:26 2024 +0200

    [RLlib] EnvRunners fix min/max-metrics window sizes (from `inf` to `config.metrics_num_episodes_for_smoothing`). (#45575)

[33mcommit d9761d7d49df53383877ff9d8aeb2977270af53c[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Tue May 28 07:20:56 2024 -0700

    [dashboard] fix test that relies on tight timing (#45561)
    
    metrics might not show up immediately
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit baffe070eb64f9dc36797e9cab59214da9a3b811[m
Author: Rui Qiao <161574667+ruisearch42@users.noreply.github.com>
Date:   Mon May 27 21:18:13 2024 -0700

    [Core] Adjust NodeDeathInfo in raylet (#45533)
    
    In #45357, in the case of preemption, and after the draining deadline, we expect autoscaler to directly SIGKILL the node without sending SIGTERM first. However, autoscaler would send SIGTERM first then SIGKILL. Therefore, this PR does the following:
    
    - At Raylet, distinguish if a SIGTERM is initiated from preemption draining or normal termination based on existing draining request
    - Construct node death info accordingly and send UnregisterNode() RPC to GCS
    
    Signed-off-by: Rui Qiao <ruisearch42@gmail.com>

[33mcommit bbbf51e6a0f258ed33a8114a0a7dfb285c0686dd[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Mon May 27 10:12:35 2024 +0200

    [RLlib] Fix metrics bug (wrt individual agent returns) in `MultiAgentEnvRunner`. (#45543)

[33mcommit 15c294ed6ca3bfd8dcda8f958c354abc9c28295f[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Sun May 26 07:39:59 2024 -0700

    [ci][microcheck/13] reuse the logic to determine microcheck tests (#45504)
    
    Currently the logic to determine the list of microcheck tests and their
    rayci step ids are diverging. This PR move more function into Test
    class, so we converge more these two logic.
    
    This make sure that we will trigger the right buildkite steps to cover
    most if not all microcheck tests.
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit a77726912b8094e65d1dfe48b9da1c7ce1a92ca2[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Sat May 25 23:10:26 2024 -0700

    [Data] Upgrade Arrow version to 16 in CI (#45565)
    
    The most recent stable version of Arrow is 16. So, this PR bumps the version in CI from 15 to 16.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 93dce13cbcd6871afd0ed61bd46cd989945667f3[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Sat May 25 20:56:50 2024 -0700

    [core][experimental] Support NCCL-based torch.Tensors nested inside Python objects (#45473)
    
    Allows torch.Tensors nested inside Python objects to be transferred via
    NCCL using the following syntax:
    
    ```python
        with InputNode() as inp:
            dag = sender.send.bind(inp)
            dag = dag.with_type_hint(TorchTensorType(transport="nccl"))
            dag = receiver.recv.bind(dag)
    ```
    
    We implement this by using an additional shared memory channel to pass
    CPU data, with a "nested" NCCL channel to pass the GPU data. Here is the
    send procedure for the above code:
    1. Serialize the data. Extract out all tensors that are on the GPU and
    replace them with some kind of placeholder.
    2. Send a list of metadata through the meta_channel.
    3. Send the GPU tensors through the NCCL channel.
    4. Send the rest of the CPU data through a cpu_data_channel, with the
    placeholders for the GPU tensors.
    
    Note that if the TorchTensorType doesn't have a shape and dtype
    specified, we currently use the separate meta_channel to pass metadata
    for the serialized tensors, as introduced in #45332. To elide the
    cpu_data_channel, the user should now use
    `TorchTensorType(direct_return=True)`, to indicate that no CPU data is
    sent along with the GPU data. To elide the meta_channel, the user should
    declare the shape and dtype, e.g., `TorchTensorType(shape=(10, ),
    dtype=torch.float16)`.
    
    ## Related issue number
    
    Closes #45306.
    
    ---------
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>
    Co-authored-by: SangBin Cho <rkooo567@gmail.com>

[33mcommit f13d144d860a9b76957d08f57468f011b39734a4[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Sat May 25 00:42:33 2024 -0700

    [Data] Add `override_num_blocks` to `from_pandas` and perform auto-partition (#44937)
    
    A common pattern is to load a DataFrame containing file URIs with from_pandas and then loading those URIs with map_batches. If you have a single large DataFrame, the subsequent operator (e.g., for reading) won't be parallelized because from_pandas produces one input block.
    
    To fix this issue, this PR automatically splits DataFrames into a good number of blocks, and allows the user to override the number of blocks.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 91a6ed2f11f412eac65de78eef61c229f7aa09ec[m
Author: Andrew Sy Kim <andrewsy@google.com>
Date:   Sat May 25 01:04:26 2024 -0400

    [Docs][KubeRay] add example for distributed checkpointing with kuberay and gcsfuse (#45043)
    
    Signed-off-by: Andrew Sy Kim <andrewsy@google.com>

[33mcommit f9ac0505b41fcaaa38f134129d5bc1e7eee0a4e0[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 24 15:53:55 2024 -0700

    [ci][microcheck/12] move get_new_tests and get_human_specified_tests to Test class (#45500)
    
    This is part of the series to move some of the function to compute
    microcheck test coverage to the Test class. This will allow me to reuse
    the logic more easier in other places.
    
    Should be a pure refactoring.
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 21534bbb63ca8d58052337797d8b2f4320807374[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 24 14:57:17 2024 -0700

    [doc] add a doc page about ci testing workflow on a PR (#45446)
    
    As title, add a doc page about the new ci testing workflow (microcheck,
    go, premerge, etc.). I'll follow up with another PR to add more images
    to the doc.
    
    Test:
    -
    https://anyscale-ray--45446.com.readthedocs.build/en/45446/ray-contribute/ci.html
    
    <img width="1622" alt="Screenshot 2024-05-20 at 11 02 29 AM"
    src="https://github.com/ray-project/ray/assets/128072568/46a4c056-d9fd-47ef-ae28-40001bbabc41">
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>
    Signed-off-by: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
    Co-authored-by: angelinalg <122562471+angelinalg@users.noreply.github.com>

[33mcommit 10b255e5fb607d34761448099ebd03af24badf4e[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 24 13:49:20 2024 -0700

    Revert "Unpin setproctitle, fixes #37727" (#45539)
    
    Reverts ray-project/ray#40289. Breaking
    https://github.com/orgs/anyscale/projects/76/views/1?pane=issue&itemId=64249695.
    
    Close #45502
    
    Test:
    - https://buildkite.com/ray-project/postmerge-macos/builds/942

[33mcommit 7709dec241e2ad8eed487bc6afc29e5be87ae387[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 24 13:17:44 2024 -0700

    [ci][microcheck/11] move get_changed_tests to Test class (#45499)
    
    This is part of the series to move some of the function to compute
    microcheck test coverage to the Test class. This will allow me to reuse
    the logic more easier in other places.
    
    Should be a pure refactoring.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit fde52033983ee529ac6ef3d1265086bd45bd23c9[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Fri May 24 18:00:47 2024 +0200

    [RLlib] Example Cleanups new API Stack - Autoregressive Action Module. (#45525)

[33mcommit 5cb7c09af5dc5e6a225526b020ee4b010d5b2748[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Fri May 24 16:13:23 2024 +0200

    [RLlib] Cleanup examples folder: Add example restoring 1 of n agents from a checkpoint. (#45462)

[33mcommit 7fb0ce1edc3b53a82257d57a715b042d07045ad9[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Fri May 24 10:32:49 2024 +0200

    [RLlib] Add support for multi-agent off-policy algorithms in the new API stack. (#45182)

[33mcommit 4851df7019112160badf2b6a1e384ab3a6909681[m
Author: Hongchao Deng <hongchaodeng1@gmail.com>
Date:   Thu May 23 21:38:40 2024 -0700

    [core] log dedup should not dedup number only lines (#45485)
    
    Signed-off-by: hongchaodeng <hongchaodeng1@gmail.com>

[33mcommit 48e571157716dcae3584d73b95be6b2208aaf329[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Thu May 23 19:14:18 2024 -0700

    [Data] Clarify that `num_rows_per_file` isn't strict (#45529)
    
    The parameter name num_rows_per_file suggests that the resulting files should have exactly the specified number of rows, but that isn't the case. This PR clarifies that the value is more of a hint.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 4fb670b84dc8b52a50a268bf05d3593189568b38[m
Author: Tim Paine <3105306+timkpaine@users.noreply.github.com>
Date:   Thu May 23 23:29:38 2024 +0200

    Unpin setproctitle, fixes #37727 (#40289)
    
    Unpin setproctitle, fixes #37727
    
    Signed-off-by: Tim Paine <3105306+timkpaine@users.noreply.github.com>

[33mcommit d8f5aeb16ff502c2eccb29def5802eccc00313d3[m
Author: Gene Der Su <e870252314@gmail.com>
Date:   Thu May 23 10:44:16 2024 -0700

    [Serve] keep serve alive with bad deployment on `serve run --reload cli` (#45483)
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    
    Put the file watching code inside a try-except block to prevent bad
    deployment shutdown serve. Also added a test to ensure this behavior.
    
    ## Related issue number
    
    Closes https://github.com/ray-project/ray/issues/45204
    
    ## Checks
    
    - [ ] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [ ] I've run `scripts/format.sh` to lint the changes in this PR.
    - [ ] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [ ] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - [ ] Unit tests
       - [ ] Release tests
       - [ ] This PR is not tested :(
    
    ---------
    
    Signed-off-by: Gene Su <e870252314@gmail.com>

[33mcommit 4ebbcbf8d884d9b8b839ff96f119061b41c91989[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu May 23 18:33:19 2024 +0200

    [RLlib] Fix Single/MultiAgentEnvRunner missing env-to-module connector call in `_sample_episodes()`. (#45517)

[33mcommit 2bd35d76175e22a129566ba1677f08d80eb2b94c[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 23 08:43:27 2024 -0700

    Revert "[ci][microcheck] include step id from all step job flavors" (#45514)
    
    Reverts ray-project/ray#45403. This seems like not a good idea. Run
    between different test flavors do not provide a lot of signals, but
    there are a lot of those so it is notably more expensive.
    
    Test:
    - https://buildkite.com/ray-project/microcheck/builds/488
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit d091bb5df7b0a8ec10d11ed53f44129f621c0c7d[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Thu May 23 00:30:57 2024 -0700

    [Data] Allow user to configure timeout for actor pool  (#45508)
    
    If your Dataset waits more than 10 minutes to launch GPU actors, your program fails. This PR allows you to configure this behavior so that you can wait longer.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit e6c3f8590693aff521c3015235c14cfe6c3053ec[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Wed May 22 23:03:19 2024 -0700

    [core] Deflake test_get_locations on windows. (#45506)
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit bb982e451a217c91e6aeece8edf4d79b5faa45d5[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Wed May 22 21:42:54 2024 -0700

    [dashboard][perf] Adapt functions from aiodebug to monitor dashboard event loop blocking (#45097)
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit 7bb57c42fb6d9554662668189510a7d9e06bedab[m
Author: angelinalg <122562471+angelinalg@users.noreply.github.com>
Date:   Wed May 22 20:10:00 2024 -0700

    [docs] remove Ray Summit Call for Papers banner (#45509)
    
    ## Related issue number
    
    Closes #45366
    
    ## Checks
    
    - [x] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [ ] I've run `scripts/format.sh` to lint the changes in this PR.
    - [ ] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [ ] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - [ ] Unit tests
       - [ ] Release tests
       - [ ] This PR is not tested :(
    
    ---------
    
    Signed-off-by: angelinalg <angelina@anyscale.com>
    Signed-off-by: angelinalg <122562471+angelinalg@users.noreply.github.com>

[33mcommit 4fe83c3820957ae6c236c8e13d3fde5f758f896f[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 22 19:52:01 2024 -0700

    [serve] vllm example to serve llm models (#45430)
    
    Adds a documentation example using vLLM to serve LLM models on Ray
    Serve.
    
    This is a copy of https://github.com/ray-project/ray/pull/45325 + add a
    build environment for ray serve + vllm.
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>
    Signed-off-by: Edward Oakes <ed.nmi.oakes@gmail.com>
    Signed-off-by: akshay-anyscale <122416226+akshay-anyscale@users.noreply.github.com>
    Signed-off-by: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
    Co-authored-by: Edward Oakes <ed.nmi.oakes@gmail.com>
    Co-authored-by: akshay-anyscale <122416226+akshay-anyscale@users.noreply.github.com>
    Co-authored-by: angelinalg <122562471+angelinalg@users.noreply.github.com>

[33mcommit a72adbeacddd2f02bf106a682c83aad002135e5f[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Wed May 22 18:10:59 2024 -0700

    Update Docker dependencies for 2.23.0 Ray release (#45510)
    
    Signed-off-by: kevin <kevin@anyscale.com>

[33mcommit c2c8a7709aa9e76690fd5b955022f18a6b9fcaf7[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 22 18:05:37 2024 -0700

    [doc][api/01] script to find annotated apis (#45474)
    
    - Script to find annotated apis for a given ray module
    - Add annotation type (publicapi, developerapi, deprecated, etc.) to all
    classes and functions. We need this information to determine if a class
    or function should be rendered in our doc.
    
    
    Test:
    - CI
    - run the script locally
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 7fa11cf0bc80604866c0f4686f06505d96725cb3[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 22 17:47:24 2024 -0700

    [ci][microcheck] recover the logic to compute new tests (#45507)
    
    https://github.com/ray-project/ray/pull/45462 adds a new tests by
    changing bazel rule instead of adding a new test file; this case can
    only be covered by our previous logic of computing new tests; recover
    this logic (in addition to the logic of computing new tests by looking
    at changed test files)
    
    This is a redo of https://github.com/ray-project/ray/pull/45495 which
    got reverted. The difference now is that we run the bazel command in a
    container instead of on the current environment. bazel seems to have
    issues sharing the cache when calling bazel within bazel
    (https://buildkite.com/ray-project/microcheck/builds/444#018fa23a-6e31-435b-a0ea-412ca2d1017b/175-1476)
    
    Test:
    - CI
    - full microcheck run:
    https://buildkite.com/ray-project/microcheck/builds/464
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 1858421854d3950f5b4da443be12fa8ea9ac81bb[m
Author: matthewdeng <matt@anyscale.com>
Date:   Wed May 22 15:43:10 2024 -0700

    [train][tune] update CODEOWNERS (#45503)
    
    Adding @hongpeng-guo and @raulchen as codeowners for Train and Tune.
    
    Signed-off-by: Matthew Deng <matt@anyscale.com>

[33mcommit b274d444e3f7d13996fdf56ff9fdd94dc3cc6e02[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Wed May 22 15:08:48 2024 -0700

    [core] More GcsClient Accessor methods. (#45451)
    
    Add `num_deleted` to InternalKVAccessor::Del and [Async]CheckAlive to NodeInfoAccessor. This is needed for feature parity with PythonGcsClient.
    
    Added with C++ Tests.
    
    ---------
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit fd589b749496d4e4b982d81433827439c7e74919[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 22 15:05:10 2024 -0700

    Revert "[ci][microcheck] recover the logic to compute new tests" (#45505)
    
    Reverts ray-project/ray#45495

[33mcommit fd15aa25e1cb9a691750c63be064923a0fd47dc7[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Wed May 22 12:57:14 2024 -0700

    [Data] Refactor `Dataset.split(equal=True)` to not use block lists  (#45480)
    
    This PR is part of a larger effort to remove BlockList and LazyBlockList internally. To this end, this PR removes references to BlockList in the Dataset.split code path where equal=True.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 7c2fdcf481f62b8d0857cf796ee89e5cd84e4277[m
Author: Kamen Shah <kamenshah@gmail.com>
Date:   Wed May 22 15:05:58 2024 -0400

    Clean up Serve proxy files (#45486)
    
    This PR includes 2 changes:
    1. Cleaning up the proxy file to improve consistency for the HTTP and
    GRPC proxy.
    2. Add missing properties to testing classes to better simulate e2e
    tests.
    
    ---------
    
    Signed-off-by: Kamen Shah <kamenshah@gmail.com>

[33mcommit 42d9e0595ceb210807898201611e9c8908043007[m
Author: Cindy Zhang <cindyzyx9@gmail.com>
Date:   Wed May 22 12:02:54 2024 -0700

    [serve] deflake autoscaling tests (#45358)
    
    [serve] deflake autoscaling tests
    
    Deflake `test_autoscaling_policy.py` which contains e2e autoscaling
    tests.
    
    1. While debugging, we saw that `test_handle_deleted_on_crashed_replica`
    would sometimes spit out an error (after the test passes) because the
    restarted Router replica fails to initialize because the controller
    already started shutting down all deployments. This PR adds a wait
    condition to make sure router replica is restarted before test ends.
    2. `SignalActor`, with the same actor name, is used in a few of the
    tests. If Ray doesn't garbage collect fast enough, then the actor won't
    be killed fast enough and consecutive test runs will error out saying an
    actor of the same name already exists. This PR makes sure to kill the
    signal actor at the end of tests that use it.
    
    Signed-off-by: Cindy Zhang <cindyzyx9@gmail.com>

[33mcommit c74837002ff1ce4ed7535ba063f29c70f70f346f[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 22 10:52:33 2024 -0700

    [ci][microcheck] recover the logic to compute new tests (#45495)
    
    https://github.com/ray-project/ray/pull/45462 adds a new tests by
    changing bazel rule instead of adding a new test file; this case can
    only be covered by our previous logic of computing new tests; recover
    this logic (in addition to the logic of computing new tests by looking
    at changed test files)
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit cedc2d4d80ad01dbe5db7afacd9b0c5fe0006099[m
Author: Max Liu <liumax2000@gmail.com>
Date:   Wed May 22 10:48:22 2024 -0700

    [Core] Turn off color logging prefix (#45218)
    
    This pr adds optionality to turn off color logging from actors. This is useful in the case where the logs are outputted to a location that does not support ansi codes, which leads to messy logs.
    
    Signed-off-by: mliu <liumax.gh@gmail.com>

[33mcommit edfb1d599462a440e674689ffcc369f513d044e3[m
Author: Max Pumperla <max.pumperla@googlemail.com>
Date:   Wed May 22 18:46:12 2024 +0200

    [docs] fix ray assistant, closes #45416 (#45491)
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    
    <!-- Please give a short summary of the change and the problem this
    solves. -->
    
    ## Related issue number
    
    <!-- For example: "Closes #1234" -->
    
    ## Checks
    
    - [ ] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [ ] I've run `scripts/format.sh` to lint the changes in this PR.
    - [ ] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [ ] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - [ ] Unit tests
       - [ ] Release tests
       - [ ] This PR is not tested :(
    
    Signed-off-by: Max Pumperla <max.pumperla@googlemail.com>

[33mcommit 5d88ca0ddc4d9dc192b6e7ebda86ea53e965e238[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Wed May 22 09:36:48 2024 -0700

    [Data] Remove unused `force_reads` parameter from `execute_to_iterator` (#45487)
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 1afa2ab8786586e2d408b8d9a22c840d70b056bd[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Wed May 22 14:02:24 2024 +0200

    [RLlib] Fix stateful module errors with inference only mode. (#45465)

[33mcommit d9e795c17a6d4fe61fa57f691c9bcc60dcace72e[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Wed May 22 11:15:31 2024 +0200

    [RLlib; CODEOWNERS] Change RLlib's code owners. (#45472)

[33mcommit 6f77e74d5581e5eb606341a91378862cc278ae0a[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Tue May 21 23:13:05 2024 -0700

    [Core] Adds `timeout_ms` and a new method `MultiGet` to InternalKVAccessor. (#45444)
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit c8412a803b886d8d892b1933b5e89de51b66b3f3[m
Author: Rui Qiao <161574667+ruisearch42@users.noreply.github.com>
Date:   Tue May 21 21:03:48 2024 -0700

    [Core] Expose node death information in dashboard (#45320)
    
    Signed-off-by: Rui Qiao <ruisearch42@gmail.com>

[33mcommit 288c87af036bf54b08117ce40eb4772844604240[m
Author: Rui Qiao <161574667+ruisearch42@users.noreply.github.com>
Date:   Tue May 21 21:02:28 2024 -0700

    [Core] Improve NodeDeathInfo propagation in node draining (#45357)
    
    Signed-off-by: Rui Qiao <ruisearch42@gmail.com>

[33mcommit 6a8997cd720e2a92c5dc2763becf39e180b8c96e[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Tue May 21 16:40:34 2024 -0700

    [bazel] upgrade platforms to 0.0.9 (#45470)
    
    and moving it out, as it is a very fundamental bazel package, not
    specific to ray.
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit da9946a711249a15d5e03a3b47cc28ab8362b802[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Tue May 21 16:26:24 2024 -0700

    [ci] fix mac build (#45482)
    
    This package is not available for mac, let's skip it on mac platform
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 7d516c2417992d2c8bbc50194b9e93f15866850f[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Tue May 21 16:23:37 2024 -0700

    [bazel] use .bazelversion file (#45476)
    
    cleaner to write, and easier to parse
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit cd3d3b7f8908e8adc821f1a79db5690150526ee7[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Tue May 21 15:15:11 2024 -0700

    [Data] Remove unused `_split_at_index` (#45481)
    
    The _split_at_index function isn't used anywhere. This PR removes it.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit ac80772a4999ace8376f8454cf67bda3f3b50126[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Tue May 21 12:10:56 2024 -0700

    [bazel] add name in auto_http_archive error msg (#45471)
    
    so that we know which archive import it is talking about
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 2f5d9c79a26a8fea2ca28d011271a0a91767bf99[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Tue May 21 21:10:02 2024 +0200

    [RLlib] Add option for APPO/IMPALA to change number of GPU-loader threads and skip mixin buffer if not needed. (#45467)

[33mcommit fab4bcb5b304058b18da97dbfa0f12da91a1214f[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Tue May 21 09:53:47 2024 -0700

    [bazel] upgrade cython package (#45436)
    
    to 0.29.37; required for bazel upgrade.
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit f4030875feae9c816c4693c84b416cd606f9cf3d[m
Author: matthewdeng <matt@anyscale.com>
Date:   Tue May 21 09:38:58 2024 -0700

    [train] Pin jax for Dreambooth Fine-Tuning template (#45389)
    
    
    More recent versions of `jax` (e.g. `0.4.28`) will cause this to fail.
    
    Signed-off-by: Matthew Deng <matt@anyscale.com>

[33mcommit 7767457f0c0bb61d7bbff37228729a40cd1ab176[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Tue May 21 08:16:10 2024 -0700

    [java] fix double bracket init (#45460)
    
    fixes https://errorprone.info/bugpattern/DoubleBraceInitialization
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 592b5dadcd04ad5c11a5b3cc39e610d98369998f[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Tue May 21 00:07:47 2024 -0700

    [bazel] remove incompatible_linkopts_to_linklibs flag (#45457)
    
    the flag already flipped its default to true in bazel 5.6.x , and it is
    removed in bazel 6.x
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 6c2424ccf0b5bdcd32a47028bbc7a561c9e04560[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Mon May 20 23:38:07 2024 -0700

    [bazel] remove flag that has no use (#45455)
    
    not supported on newer version of bazel
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 41a2b4b9892a6e21a22069c1d02fae2e882a6483[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Mon May 20 22:32:02 2024 -0700

    [bazel] upgrade googletest package (#45449)
    
    to version 1.14.0
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit ab2b442b345130254ff3f442874fe22d6a0e177d[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Mon May 20 22:07:55 2024 -0700

    [core][experimental] Fix GPU microbenchmark (#45426)
    
    Fix compute config for microbenchmark_gpu_unstable.
    
    Closes #45322.
    
    ---------
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>

[33mcommit a9fb64f3150ab05f193d828e4beb9fa0cb0ca5d0[m
Author: chuanzhisongshu <49055103+982945902@users.noreply.github.com>
Date:   Tue May 21 12:16:28 2024 +0800

    [Core] Fix worker crash when getting actor name from runtime context (#45194)
    
    Currently calling get_runtime_context().get_actor_name() from driver will crash. Instead of crashing, this PR returns None in this case.
    
    Signed-off-by: 982945902 <982945902@qq.com>
    Co-authored-by: Huaiwei Sun <scottsun94@gmail.com>

[33mcommit 56c1df5732ca08de58eafbecdeb3d74ee7aff763[m
Author: Hongchao Deng <hongchaodeng1@gmail.com>
Date:   Mon May 20 20:15:13 2024 -0700

    [core] chaos test code cleanup (#45450)
    
    Some minor code cleanup separated from #45450 .
    To focus that PR more on new changes only.

[33mcommit 348145c62db082a7a5970e8d58d3512988d082cd[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Mon May 20 16:56:56 2024 -0700

    [Data] Remove some dead code from `BlockList` (#45398)
    
    This PR removes several methods from BlockList and LazyBlockList that aren't used anywhere.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>
    Co-authored-by: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>

[33mcommit 9eb2ce79a34d87677aef306cd87a45f02b5d7ad1[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Mon May 20 15:05:05 2024 -0700

    Add perf metrics for 2.23.0 (#45443)
    
    approved by @jjyao
    
    ---------
    
    Signed-off-by: khluu <51931015+khluu@users.noreply.github.com>
    Signed-off-by: kevin <kevin@anyscale.com>

[33mcommit fbcd106ab6122dea31452390175f95aef96fc0a7[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Mon May 20 14:05:39 2024 -0700

    [docker] remove worker container (#45447)
    
    not built or used anywhere anymore
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit baff5973f48e4ec92bc4148cfa0e65ad4322134d[m
Author: Justin Yu <justinvyu@anyscale.com>
Date:   Mon May 20 13:15:24 2024 -0700

    [tune] Improve excessive syncing warning and make some deprecations (#45210)
    
    Make the "Experiment state snapshotting has been triggered multiple..." warning message is less confusing, and remove the false positive log at the end of every run. Also makes some deprecations of `TUNE_RESULT_DIR`,
    `RAY_AIR_LOCAL_CACHE_DIR`, `local_dir` legacy settings.
    
    ---------
    
    Signed-off-by: Justin Yu <justinvyu@anyscale.com>
    Co-authored-by: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>

[33mcommit e2028e08087e5e7e8696530aabdb881fb1020618[m
Author: Cheng Su <scnju13@gmail.com>
Date:   Mon May 20 12:11:25 2024 -0700

    [Data] Avoid pickling LanceFragment when creating read tasks for Lance (#45392)
    
    Avoid pickling LanceFragment when creating read tasks for Lance, as this is expensive.
    
    Signed-off-by: Cheng Su <scnju13@gmail.com>

[33mcommit 4c1519be13087f4ccb47431f9ebc3dc446182775[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Mon May 20 11:13:25 2024 -0700

    [release-automation] Step to build update version binary into zip and store as artifact (#45363)
    
    - This is to use for automation from `product` repo
    - Builds `update_version` binary into a python zip file and upload it as
    an artifact in `release-automation` pipeline
    - Have `root_dir` as an arg for `update_version` since automation is
    using this on a cloned Ray repo
    
    ---------
    
    Signed-off-by: khluu <51931015+khluu@users.noreply.github.com>

[33mcommit 2789a16799c0706c50e13ba79b9de86f409a7b06[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Mon May 20 10:24:46 2024 -0700

    [release-automation] Fix nested directory of perf metrics (#45442)
    
    This
    [commit](https://github.com/ray-project/ray/commit/0de88e4f64cdaf2f6c93ee906ef78bf66b97d827)
    added these files into `benchmarks/benchmarks/` directory instead of
    just `benchmarks/` by accident. This PR moves these files back into just
    `benchmarks/` directory
    
    Signed-off-by: khluu <51931015+khluu@users.noreply.github.com>

[33mcommit 6ae3f8c85aeb1a895373433e4e2c8dfd109ea0a5[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Mon May 20 10:10:15 2024 -0700

    [ci] add depends_on for wheels steps (#45425)
    
    so that they do not have to execute in sequential order
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit ca9f73607a3fe56fc2ff008a17a88945daeba121[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Mon May 20 10:01:12 2024 -0700

    [core][experimental] Add support for dynamically sized torch.Tensors passed via NCCL in accelerated DAG (#45332)
    
    This adds support for dynamically sized torch.Tensors to be passed
    between accelerated DAG nodes via NCCL. Specifically, the following code
    is now supported, whereas previously `shape` and `dtype` had to be
    explicitly passed to `TorchTensorType`.
    
    ```python
        with InputNode() as inp:
            dag = sender.send.bind(inp)
            dag = dag.with_type_hint(TorchTensorType(transport="nccl"))
            dag = receiver.recv.bind(dag)
    
        compiled_dag = dag.experimental_compile()
    ```
    
    The feature works by creating a shared memory channel to pass the
    metadata for the shape and dtype of the tensor. The metadata is then
    used to create a buffer of the correct size on the NCCL receiver.
    
    Initial microbenchmarks shows this adds about 50% throughput overhead
    compared to statically declaring the shape and dtype, or about 160us/DAG
    call. This seems a bit higher than expected (see also #45319).
    
    This also adds a few other fixes:
    - adds support for reusing actors to create new NCCL groups, which is
    needed if a DAG is torn down and a new one is created.
    - adds a lock to DAG teardown, to prevent the same NCCL group from
    getting destructed twice.
    - User-defined TorchTensorType shape or dtype is now used as a hint for
    the buffer size, instead of a required size. Since buffers are currently
    static, an error will be thrown if the user tries to return a too-large
    tensor.
    
    Part 1 of #45306, will follow up with a separate PR for nested tensors.
    
    
    ---------
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>
    Co-authored-by: SangBin Cho <rkooo567@gmail.com>
    Co-authored-by: Kai-Hsun Chen <kaihsun@apache.org>

[33mcommit 61d9049628001ec6b2129c30d66eb741908994b3[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Mon May 20 06:44:12 2024 -0700

    [dashboard][perf] Move Job package uploading to another thread. (#45282)
    
    Package uploading is a CPU intensive work in Dashboard, where it collects the whole 500 MiB working_dir and uploads it to the GCS. It can take 30s to do so - during which the Dashboard event loop is blocking.
    
    This PR moves the uploading to another thread. This avoids event loop blocking.
    
    This PR also removes a dead reference to gcs_client in http_server_head.py.
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit 74fc9be46e6d927d44ddb7b1ee74437e46aba802[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Mon May 20 06:41:53 2024 -0700

    [core] Deflake `windows://python/ray/tests:test_get_locations` by reducing object size (#45309)
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit 3f5aa5c4642eeb12447d9de5dce22085512312f3[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Sun May 19 21:08:04 2024 -0700

    [bazel] upgrade skylib (#45435)
    
    to latest version of 1.6.1
    
    required to upgrade bazel. old skylib uses platform constraints that are
    depredated in newer versions of bazel.
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit be2272d36465542fad3be92cd93aafe8c034926d[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Sat May 18 18:30:19 2024 -0700

    [bazel] use new platform constraint (#45424)
    
    old `bazel_tools` constraints are deprecated.
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 4db8b1cde06562bc0d229ff10adc6ed227d62e3f[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Sat May 18 07:18:33 2024 -0700

    [ci] remove old docker image building logic (#45429)
    
    not being used anymore. images are built with wanda and `ray_ci` scripts
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit a96866e2d7feae25c725b770b5b1b4aabb9dc81e[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Fri May 17 22:46:44 2024 -0700

    [cpp] stop mentioning gcc (#45428)
    
    we use clang now; no gcc
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 6157e3bdc388b32d97b19d7a8d6f16d2582d9f21[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Fri May 17 19:53:35 2024 -0700

    [ci] remove old worker container test (#45422)
    
    super old, not used or tested anywhere anymore. was still using py36
    images...
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 566dd5e8175ba38f61ccba670fae53eaeaab6a15[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 17 13:48:25 2024 -0700

    [ci][microcheck] manually add tests to microcheck (#45400)
    
    Allow PR owners to add tests to microcheck manually by adding a line
    with syntax
    
    `@microcheck //test_target_01 //test_target_02`
    
    to the git commit message. Thanks @stephanie-wang for the great idea.
    
    Note that it's ok to provide an invalid target because `tester` will
    re-validate them with `bazel query`.
    
    Test:
    - //release:test_config is manually added and run
    https://buildkite.com/ray-project/microcheck/builds/169#018f84d5-1024-4285-a3fa-59a96e925563/179-1057
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 90fa2895bdc792b5e61f4d250a78ae23205da25b[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 17 13:39:22 2024 -0700

    [release] mark chaos_torch_batch_inference_16_gpu_300gb_raw as non-stable (#45387)
    
    This test might be still flaky
    https://github.com/orgs/anyscale/projects/76/views/1?pane=issue&itemId=63092837.
    If it is should we mark it unstable to unblock the release, and mark it
    stable again once it is deflaked. Thankks.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 3acce1c43f212cf99366244e8e907f02ebc9bbec[m
Author: Arthur Böök <49250723+ArthurBook@users.noreply.github.com>
Date:   Fri May 17 13:33:34 2024 -0700

    added typehint overloads to accurately infer the return type for ray.… (#45033)
    
    This PR solves issue
    [#45032](https://github.com/ray-project/ray/issues/45032) by
    implementing overloads that handle the return type inference for
    synchronous and asynchronous functions and methods decorated with
    `@ray.serve.batch`. The change improves compatibility with pylance, mypy
    and other type checkers, enhancing user-friendlyness. NOTE: No runtime
    changes are expected.
    
    # Before PR:
    ```python
    '''Test the type infernece for return value of a batched function or method with pylance.'''
    import ray.serve
    
    
    @ray.serve.batch # No overloads for "batch" match the provided argumentsPylancereportCallIssue
    def batch_fn_sync_no_args(integers: list[int]) -> list[int]:
        "docs"
        return [i * 2 for i in integers]
    a = batch_fn_sync_no_args(1) # (function) def batch_fn_sync_no_args(integers: list[int]) -> list[int]  NOTE: still expecting a list[int] return type
    
    @ray.serve.batch # No overloads for "batch" match the provided argumentsPylancereportCallIssue
    async def batch_fn_async_no_args(integers: list[int]) -> list[int]:
        "docs"
        return [i * 2 for i in integers]
    b = batch_fn_async_no_args(1) # (function) def batch_fn_async_no_args(integers: list[int]) -> Coroutine[Any, Any, list[int]] NOTE: still expecting a list[int] return type
    
    
    @ray.serve.batch(max_batch_size=2) # No overloads for "batch" match the provided argumentsPylancereportCallIssue
    def batch_fn_sync_w_args(integers: list[int]) -> list[int]:
        "docs"
        return [i * 2 for i in integers]
    c = batch_fn_sync_w_args(1) # (function) batch_fn_sync_w_args: G@batch NOTE: G@batch is un-inferred by pylance
    
    
    @ray.serve.batch(max_batch_size=2) # No overloads for "batch" match the provided argumentsPylancereportCallIssue
    async def batch_fn_async_w_args(integers: list[int]) -> list[int]:
        "docs"
        return [i * 2 for i in integers]
    d = batch_fn_async_w_args(1) # (function) batch_fn_async_w_args: G@batch NOTE: G@batch is un-inferred by pylance
    
    
    
    class Server:
        @ray.serve.batch # No overloads for "batch" match the provided argumentsPylancereportCallIssue
        def batch_meth_sync_no_args(self, integers: list[int]) -> list[int]:
            "docs"
            return [i * 2 for i in integers]
    
        @ray.serve.batch # No overloads for "batch" match the provided argumentsPylancereportCallIssue
        async def batch_meth_async_no_args(self, integers: list[int]) -> list[int]:
            "docs"
            return [i * 2 for i in integers]
    
        @ray.serve.batch(max_batch_size=2) # No overloads for "batch" match the provided argumentsPylancereportCallIssue
        def batch_meth_sync_w_args(self, integers: list[int]) -> list[int]:
            "docs"
            return [i * 2 for i in integers]
    
        @ray.serve.batch(max_batch_size=2) # No overloads for "batch" match the provided argumentsPylancereportCallIssue
        async def batch_meth_async_w_args(self, integers: list[int]) -> list[int]:
            "docs"
            return [i * 2 for i in integers]
    
    
    e = Server().batch_meth_sync_no_args(1)  # Argument of type "Literal[1]" cannot be assigned to parameter "integers" of type "list[int]" in function "batch_meth_sync_no_args"
    # (method) def batch_meth_sync_no_args(integers: list[int]) -> list[int]
    f = Server().batch_meth_async_no_args(1) # (method) def batch_meth_async_no_args(integers: list[int]) -> Coroutine[Any, Any, list[int]]
    # (method) def batch_meth_async_no_args(integers: list[int]) -> Coroutine[Any, Any, list[int]]
    g = Server().batch_meth_sync_w_args(1) # Expected 0 positional argumentsPylancereportCallIssue
    # (method) def batch_meth_sync_w_args(int) -> int
    h = Server().batch_meth_async_w_args(1) # Expected 0 positional argumentsPylancereportCallIssue
    # (method) def batch_meth_async_w_args() -> R
    
    ```
    In summary, before the PR, the typechecker (Pylance in the above case)
    is unable to match the `@ray.serve.batch` function signature of the
    functions and methods that it is intended to decorate. This causes the
    input and return type to be inferred incorrectly:
    1) The decorated function input type is inferred as as a list, when it
    in fact should be a scalar.
    2) The decorated function return type is inferred as as a list, when it
    in fact should be a scalar.
    3) For the decorated method, 0 positional input args are expected
    4) For the decorated method, the return type is the unbound TypeVar R.
    
    # After PR:
    ```python
    '''Test the type infernece for return value of a batched function or method with pylance.'''
    import ray.serve
    
    
    @ray.serve.batch
    def batch_fn_sync_no_args(integers: list[int]) -> list[int]:
        "docs"
        return [i * 2 for i in integers]
    a = batch_fn_sync_no_args(1) # (function) def batch_fn_sync_no_args(int) -> int
    
    @ray.serve.batch
    async def batch_fn_async_no_args(integers: list[int]) -> list[int]:
        "docs"
        return [i * 2 for i in integers]
    b = batch_fn_async_no_args(1) # (function) def batch_fn_async_no_args(int) -> Coroutine[Any, Any, int]
    
    
    @ray.serve.batch(max_batch_size=2)
    def batch_fn_sync_w_args(integers: list[int]) -> list[int]:
        "docs"
        return [i * 2 for i in integers]
    c = batch_fn_sync_w_args(1) # (function) def batch_fn_sync_w_args(int) -> int
    
    
    @ray.serve.batch
    async def batch_fn_async_w_args(integers: list[int]) -> list[int]:
        "docs"
        return [i * 2 for i in integers]
    d = batch_fn_async_w_args(1) # (function) def batch_fn_async_w_args(int) -> Coroutine[Any, Any, int]
    
    
    class Server:
        @ray.serve.batch
        def batch_meth_sync_no_args(self, integers: list[int]) -> list[int]:
            "docs"
            return [i * 2 for i in integers]
    
        @ray.serve.batch
        async def batch_meth_async_no_args(self, integers: list[int]) -> list[int]:
            "docs"
            return [i * 2 for i in integers]
    
        @ray.serve.batch(max_batch_size=2)
        def batch_meth_sync_w_args(self, integers: list[int]) -> list[int]:
            "docs"
            return [i * 2 for i in integers]
    
        @ray.serve.batch(max_batch_size=2)
        async def batch_meth_async_w_args(self, integers: list[int]) -> list[int]:
            "docs"
            return [i * 2 for i in integers]
    
    
    e = Server().batch_meth_sync_no_args(1)  # (method) def batch_meth_sync_no_args(int) -> int
    f = Server().batch_meth_async_no_args(1) # (method) def batch_meth_async_no_args(int) -> Coroutine[Any, Any, int]
    g = Server().batch_meth_sync_w_args(1) # (method) def batch_meth_sync_w_args(int) -> int
    h = Server().batch_meth_async_w_args(1) # (method) def batch_meth_async_w_args(int) -> Coroutine[Any, Any, int]
    ```
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    The return-type for a `@ray.serve.batch` decorated function is not
    inferred correctly, making mypy / pylance (probably other checkers too)
    lost the function signature for the decorated function/method.
    <!-- Please give a short summary of the change and the problem this
    solves. -->
    
    ## Related issue number
    Closes #45032
    
    ## Checks
    - [x] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [x] I've run `scripts/format.sh` to lint the changes in this PR.
    - [x] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [x] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [x] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - [x] Unit tests
       - [x] Release tests
    
    ---------
    
    Signed-off-by: Arthur <atte.book@gmail.com>
    Signed-off-by: Arthur Böök <49250723+ArthurBook@users.noreply.github.com>

[33mcommit e0ac723743493b70bb1b8e7dd7124daa8c6a4cdd[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 17 10:57:04 2024 -0700

    [ci][microcheck] include step id from all step job flavors (#45403)
    
    Our CI have a lot of different step 'flavor' that run the same tests
    (e.g. data6, data15, etc.). Currently microcheck randomly pick one of
    the step flavor given a test. This PR makes sure that it include all
    possible step flavors of that test.
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit eed322a7e4ff40768b8a4ece82aec15331540de0[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Fri May 17 17:25:46 2024 +0200

    [RLlib] Fix test_actor_manager CI test. (#45411)

[33mcommit 86ae5e81f459e5459db1fa6120ec94876bbe6c2c[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Fri May 17 14:50:17 2024 +0200

    [RLlib] Cleanup examples folder 11: Example for using fractional GPUs on the Learners. (#45379)

[33mcommit faab1ac03773f487bec811f7ad6e2bc683b76dba[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Fri May 17 10:38:27 2024 +0200

    [RLlib] Issue 44686: Upgrade all `rllib_contrib` requirements to tf2.11.1. (#45396)

[33mcommit 467b09212cd0ca734d5a72c7fb4a61ec467cc3fa[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 16 17:09:32 2024 -0700

    [ci][microcheck] improve determine new tests (#45377)
    
    Improve the logic to determine new tests for microcheck. The new logic
    get test targets from the list of changed files.
    
    Previously, we determine new tests by computing the differences between
    local test targets and test in DB. However, there are a lot of cases a
    few test function is added into an existing test target, so that logic
    doesn't work too broadly.
    
    Test:
    - CI
    - microcheck runs the test_tester test that is changed in this PR
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 01c6964fa3f549e625a9663db25ac49d5d3b0adc[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 16 16:49:43 2024 -0700

    [ci][microcheck] prefer non-flaky over flaky tests (#45386)
    
    When finding the most impactful tests to cover failed PRs, prefer
    non-flaky test first over flaky tests. However, still respect the
    coverage and try to reach it even if it means we have to add flaky
    tests.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 232946660269f5e31508a2b63b7092b03b682b84[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Fri May 17 01:17:26 2024 +0200

    [RLlib] Unify pattern of examples and learning tests. (#45023)

[33mcommit ac2408c2e2519f4e78cf4307a248684e1faeb780[m
Author: Amélie Royer <amelie.royer@ens-rennes.fr>
Date:   Thu May 16 23:28:09 2024 +0200

    [tune] Fix PB2 scheduler error resulting from trying to sort by `Trial` objects (#45161)
    
    ## Why are these changes needed?
    
    Bug fix for the PB2 scheduler in tune: the dataframe storing the `Trial` should have its first column being trial name string so that a group by operation does not error.
    
    Signed-off-by: Amélie Royer <amelie.royer@ens-rennes.fr>

[33mcommit a5f371f0f67435cc0f4f1ee4a4ee5d07177257a1[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu May 16 22:21:42 2024 +0200

    [RLlib] Cleanup metrics-spam in algo's result dicts (retire "sampler_results", don't dump env-runner-results into top-level). (#45378)

[33mcommit 856453f2648d08d3373531ac16de4bf7b7722acf[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 16 12:15:16 2024 -0700

    [ci][microcheck] use commit instead of branch for failed prs (#45384)
    
    Use commit instead of branch to identify failed prs, to account for all
    PR revisions. We seems to be under-coverage in large PRs where people
    make several bugs across multiple PR revisions.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 9ce581ed4273f18c91a1d615bb09e3f80c1ec0c3[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu May 16 20:55:57 2024 +0200

    [RLlib] AlgorithmConfig: Mostly dissolve `resources()` settings (e.g. num_learner_workers) into `learners()` and `env_runners()` methods. (#45376)

[33mcommit 7472a64e1d10d81a7a7c1ba9a102b9d2af328077[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 16 10:58:58 2024 -0700

    [ci][microcheck] a few more steps into microcheck (#45388)
    
    Add a few more non-test related to microcheck
    - pip compile dependency: this is required for any folks who want to add
    dependencies
    - doc build: no covered by any test job (maybe cover by readthedocs but
    well)
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 65e13b94c30dab3441b537f0b2a51f9fb9e80c93[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 16 10:32:42 2024 -0700

    [ci][microcheck] add key for lints (#45371)
    
    Add key for lints so I can add them to microcheck manually. Not sure if
    there is a better way to do this, so many manually added keys
    
    Test:
    - CI
    - lint is running on microcheck now
    https://buildkite.com/ray-project/microcheck/builds/77
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 29a92f0167465ce81d888253258733102e6701e4[m
Author: angelinalg <122562471+angelinalg@users.noreply.github.com>
Date:   Thu May 16 10:32:21 2024 -0700

    [docs] [serve] adding use case tags to Serve examples and fixing a typo (#45369)
    
    Noticed that in the Example Gallery, using the `Serve` and `LLM` filters
    didn't return the relevant examples. Here's my guess on the tags to add
    to the examples.
    cc: @shrekris-anyscale

[33mcommit a1b4e13542adb9996793babb1c11ddabb3b8cfb7[m
Author: Huaiwei Sun <scottsun94@gmail.com>
Date:   Thu May 16 09:40:52 2024 -0700

    [template] Update the finetuning LLM template description with 70B benchmark numbers (#40720)
    
    remove the additional . to make it clear that 14min is for 7B
    
    ---------
    
    Signed-off-by: Huaiwei Sun <scottsun94@gmail.com>
    Co-authored-by: Justin Yu <justinvyu@anyscale.com>
    Co-authored-by: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>

[33mcommit 83b38934de24a706a130d79596be00af489aa6bd[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 15 19:29:10 2024 -0700

    [ci][microcheck] add macos + windows tests to microcheck (#45361)
    
    Add macos + window tests to microcheck
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 4d37e55709f5d7b0bd0be7ecea7def9463edf37b[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 15 18:07:37 2024 -0700

    [ci][microcheck] add the blocked mac + windows steps to microcheck (#45360)
    
    So that we can also run microcheck mac + windows tests on demand
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 0d639805dbd0ea63a1bade56f3a0250d96032988[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 15 17:32:50 2024 -0700

    [ci][microcheck] compute high impact for all platform (#45367)
    
    Compute high impact tests for all platform. This is to support windows +
    macos tests for microcheck.
    
    Test:
    - CI
    
    > bazel run //ci/ray_ci/automation:determine_microcheck_step_ids
    >
    g3_s0,g8_s18,g5_s11,g4_s11,g5_s10,g13_s9,g8_s7,g8_s11,g4_s6,g13_s12,g5_s13,g5_s8,g5_s6,g12_s13,g14_s2,g14_s3,g4_s22,g4_s24,g4_s25,g4_s14,g8_s6,g8_s13,g8_s17,g8_s9,g4_s12,g14_s5,g4_s10,g13_s7,g12_s14,g12_s5,g12_s17,g12_s4,g12_s6,g12_s2
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit afce37755b8a9ca9b49eac5c5a02019172420bd4[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 15 17:14:41 2024 -0700

    [ci][bisect] fix checkout_and_validate function (#45368)
    
    Fix checkout_and_validate function, i need to return a value. Added test
    cases as well.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit c8336242a10916b2462e79b1fef6688e50c1da16[m
Author: Gene Der Su <e870252314@gmail.com>
Date:   Wed May 15 15:56:38 2024 -0700

    [Logs] Add runtime env started logs to job driver (#45255)
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    
    Added runtime env started logs to job driver
    
    ## Related issue number
    
    Closes https://github.com/anyscale/product/issues/27790
    
    ## Checks
    
    - [ ] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [ ] I've run `scripts/format.sh` to lint the changes in this PR.
    - [ ] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [ ] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - [ ] Unit tests
       - [ ] Release tests
       - [ ] This PR is not tested :(
    
    ---------
    
    Signed-off-by: Gene Su <e870252314@gmail.com>

[33mcommit 71ca353715ae0dc2fa914dfff8ade3a9d8c02efe[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Wed May 15 13:35:30 2024 -0700

    [ci] only determine tests for buildkite (#45347)
    
    buildkite is our only CI system, also removes `py_dep_analysis`
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 906794a6a55c1f0e7dbb4070337d41a95ac88def[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Wed May 15 13:35:16 2024 -0700

    [ci] remove old bazel sharding script (#45349)
    
    not used anymore
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit e0d046e587823f0731dc97c616d999a33ab58120[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Wed May 15 13:35:03 2024 -0700

    [ci] remove "should run" checking in ci/ci.sh (#45348)
    
    not used anymore
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 922be6ed45e8629c57a0342d21ed7b7458eee5b2[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Wed May 15 13:34:41 2024 -0700

    [release] sort wheels names before uploading (#45350)
    
    so that we are not uploading in some weird, arbitrary order
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 9a7d30c841c3da96f8a7fdb9ff8c6d0d4cfe978a[m
Author: Cindy Zhang <cindyzyx9@gmail.com>
Date:   Wed May 15 10:49:48 2024 -0700

    [serve] change application deploy_failed/unhealthy logs to error level (#45211)
    
    [serve] change application deploy_failed/unhealthy logs to error level
    
    Currently if an application's status changes to `DEPLOY_FAILED` or
    `UNHEALTHY` we log the status message as `warning` level. We should log
    it as `error` level as that is more appropriate.
    
    Signed-off-by: Cindy Zhang <cindyzyx9@gmail.com>

[33mcommit ad7dafc8d3726895ac5b4a7f27cb594be990a4ba[m
Author: Robert Caulk <rob.caulk@gmail.com>
Date:   Wed May 15 19:09:38 2024 +0200

    [doc] add flowdapt integration to doc ecosystem page (#45281)
    
    Following a discussion in the slack channel with @richardliaw, we are
    adding Flowdapt to the ecosystem page since it offers a robust workflow
    configuring/scheduling/triggering interface to Ray.
    
    Some background on Flowdapt:
    Over at Emergent Methods, we depend on
    [Flowdapt](https://docs.flowdapt.ai) for production workflow deployment
    for our product https://asknews.app. Meanwhile, we have a variety of
    other integrations such as Nowcast, which is designed to adaptively
    retrain/inference weather forecasting models on thousands of cities
    simultaneously. Some of our clients depend on Flowdapt for QAQC for
    high-throughput data analysis.
    
    One cool feature of Flowdapt is that we designed it to accommodate a
    variety of backends, including Ray and Dask, as well as a local
    executor. Swapping between backends requires zero-code changes for the
    application - which allowed us to run a big apples-to-apples comparison
    of Ray vs Dask: https://docs.flowdapt.ai/examples/rayvsdask/. Spoiler
    alert: Ray wins.
    
    Some open-source example plugins available that run on Flowdapt (and are
    best run with the Ray backend):
    
    Weather forecasting:
    https://github.com/emergentmethods/flowdapt-nowcast-plugin
    
    Cryptocurrency price forecasting:
    https://github.com/emergentmethods/flowdapt-cryptocast-plugin
    
    
    
    
    
    Signed-off-by: robcaulk <rob.caulk@gmail.com>

[33mcommit b0d1953d1710797f9e1dbea49bfcd9941461f6db[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Wed May 15 08:53:15 2024 -0700

    [core][experimental] Add multi-GPU CI tests for accelerated DAG (#45259)
    
    Add NCCL-based tests to CI.
    
    Also adds a fix for a test in test_torch_tensor_dag, where the driver was being assigned a GPU as its default device. The driver should instead use CPU as its default device.
    ---------
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>
    Co-authored-by: SangBin Cho <rkooo567@gmail.com>

[33mcommit a475ffeea714bef1e95d60778c3944e95670ca08[m
Author: Rui Qiao <161574667+ruisearch42@users.noreply.github.com>
Date:   Wed May 15 07:46:51 2024 -0700

    [Core] Better propogate node death information (#45128)
    
    - Add reason_message to NodeDeathInfo so that we track more verbose node death info
    - Introduce UnregisterNode PRC in GCS and use it instead of DrainNode RPC wherever appropriate
    
    Signed-off-by: Rui Qiao <ruisearch42@gmail.com>

[33mcommit cf7a09daa201c92d71cffa9f4a8e0afe45ab0475[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Wed May 15 09:54:18 2024 +0200

    [RLlib] Provide more constants for common result dict keys, e.g. `EPISODE_RETURN_MEAN`. (#45330)

[33mcommit 7818532ac5d933fdbc4c5418a06eab8d056647ea[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Wed May 15 00:51:24 2024 -0700

    Update Docker dependencies (#45346)
    
    Commit: 5b2b019f83edc840aa598829c027047e67d5dba3
    
    Signed-off-by: kevin <kevin@anyscale.com>

[33mcommit 04ad91ca29e998279039ca9e76bfe971f10cfc7d[m
Author: Joel <wuxibin89@163.com>
Date:   Wed May 15 10:29:55 2024 +0800

    ray.util.collective support torch.bfloat16 (#39845)
    
    [bfloat16](https://en.wikipedia.org/wiki/Bfloat16_floating-point_format)
    is widely used in LLM training and inference since it can achieve higher
    throughput and is less prone to weight growth. ray.util.collective use
    cupy.cuda.nccl for GPU communication, while cupy doesn't support
    bfloat16 for now (https://github.com/cupy/cupy/issues/7527). So for
    allgather/reducescater operation, we should bypass cupy.array and use
    torch.tensor directly.
    
    Signed-off-by: wuxibin <wuxibin89@163.com>
    Co-authored-by: Stephanie Wang <swang@cs.berkeley.edu>

[33mcommit 5b2b019f83edc840aa598829c027047e67d5dba3[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Tue May 14 16:51:50 2024 -0700

    [ci] skip the failing cpp tests on mac (#45273)
    
    Skip the current failing cpp tests on mac so that it can pass. It
    currently soft-fails, hinders other errors, etc.
    
    Test:
    -
    https://buildkite.com/ray-project/premerge/builds/25983#018f69fc-44dc-4329-b5af-0dcfdd59d74b
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 0de88e4f64cdaf2f6c93ee906ef78bf66b97d827[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Tue May 14 15:18:14 2024 -0700

    [release] New directory for latest release performance metrics (#45335)
    
    - Content copied over from `release/release_logs/2.22.0/`.
    - Add `release_version.txt` file to show the latest release version that
    these perf are collected from.
    - This directory will be keeping the latest release performance metrics,
    which would be updated for every releases instead of adding new version
    every time. `release/release_logs/` would be deprecated as a result
    
    ---------
    
    Signed-off-by: khluu <51931015+khluu@users.noreply.github.com>

[33mcommit 8b99609c696aabdccfc04fed054c1db108adc9ef[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Tue May 14 14:01:43 2024 -0700

    [core] Fix broken experimental test_channel.py (#45336)
    
    Fix another broken test from #45092.
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>

[33mcommit 52192ad0da300c24d4650a02f70c55f0afaa5cc0[m
Author: angelinalg <122562471+angelinalg@users.noreply.github.com>
Date:   Tue May 14 12:46:58 2024 -0700

    [docs][kuberay] Update configuring-autoscaling.md (#45334)
    
    typo

[33mcommit a3439addc5e36d0bb3fd35fdac39f3d02af2fdfc[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Tue May 14 10:55:53 2024 -0700

    [core][experimental] Fix bug when propagating DAG application exceptions (#45237)
    
    If a task in the DAG raised an application-level exception, we would
    re-raise correctly if it was read directly by the driver, but not if it
    was read by another actor in the DAG. This PR fixes the issue by writing
    the exception to the next actor.
    
    ---------
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>

[33mcommit 80ed6ecc7fc2b734c536651051c1ed92ee72530d[m
Author: jackhumphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue May 14 09:11:38 2024 -0700

    Fix sem_unlink() error check in MutableObjectManager (#45286)
    
    This fixes #45061.
    
    The core worker and the raylet each have their own MutableObjectManager
    instance, and when both a reader and a writer are on the same machine,
    the reader and writer will each register the same object with separate
    MutableObjectManager instances. Thus, when the second instance is
    destructed, it will call sem_unlink() on the same two semaphores. As the
    two semaphores have already been unlinked by the first instance, the
    sem_unlink() calls in the second instance will both fail with ENOENT.
    
    Prior to this PR, we checked that *all* calls to sem_unlink() return 0,
    which is incorrect.
    
    ---------
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit ab1b5ab92c832c37bf2579438f6710c634a7a798[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Tue May 14 12:12:29 2024 +0200

    [RLlib] Examples folder cleanup 08: Rename/remove old directories and files. (#45327)

[33mcommit 9472ae2e90d96b221e2a527705d4455e7891da5d[m[33m ([m[1;32mmaster[m[33m)[m
Author: Hongchao Deng <hongchaodeng1@gmail.com>
Date:   Mon May 13 21:10:32 2024 -0700

    [core] NodeManager: code refactor and cleanup (#45260)
    
    Signed-off-by: hongchaodeng <hongchaodeng1@gmail.com>

[33mcommit 20e0d9f44e6404fdc82efabc122e506c4b58cd48[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 13 21:07:26 2024 -0700

    [ci] increase microcheck coverage to 100 (#45317)
    
    Let start microcheck with 100% test coverage for the launch; then we can
    reduce it opportunistically. I plan to launch this on Weds to give folks
    time to rebase to a newer master base first.
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit b7d6d184084385068686363ac2eb519d9e693974[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Mon May 13 17:59:50 2024 -0700

    [Data] Add support for using actors with `map_groups` (#45310)
    
    See #41406
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 2fa66632a754886dff38482189a44f2e3d52592d[m
Author: Kai-Hsun Chen <kaihsun@anyscale.com>
Date:   Mon May 13 17:06:57 2024 -0700

    [Doc][KubeRay] Improve KubeRay docs based on CUJ (part 2) (#45304)

[33mcommit b0ddb8e79ddb67d8bab877c5be8345edf748d094[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Mon May 13 17:04:29 2024 -0700

    [Data] Fix bug where `map_groups` triggers execution during input validation (#45314)
    
    Fixes #45312
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit ea4966a122192ffc01ba3cf551856f5eca234c19[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Mon May 13 17:02:58 2024 -0700

    [Data] Add support for using GPUs with `map_groups` (#45305)
    
    You can't use GPUs with map_groups. There's no reason you shouldn't be able to do this; it was just was an issue with our implementation. This PR fixes it.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 7954ed497fd88c1a2d564c9708166b73eca56084[m
Author: Hao Chen <chenh1024@gmail.com>
Date:   Mon May 13 16:03:48 2024 -0700

    [Data] Refine exception handling from arrow data conversion (#45294)
    
    * Add detailed info (column name and data repr) for easier debugging in
    the error message when there is an exception converting data to arrow.
    * When DelegatingBlockBuilder has inferred pandas type, do not attempt
    to use pyarrow again.
    * Thus we'll only raise an exception, when the first row/batch is
    inferred as arrow, but a following row/batch cannot be converted to
    arrow. If the first row/batch is inferred as pandas, no exception or
    warning will occur.
    
    ---------
    
    Signed-off-by: Hao Chen <chenh1024@gmail.com>

[33mcommit ad57f6575f642638ce658a2a993263f4659dfdee[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 13 15:54:27 2024 -0700

    [ci] merge two flaky mac jobs into one (#45299)
    
    Merge two flaky mac jobs into one. The bootstraper (installing
    dependencies, build ray, etc.) for each mac job pretty expensive so
    let's merge as much as we can to save machine cycle.
    
    Test:
    - CI
    -
    https://buildkite.com/ray-project/premerge/builds/26053#018f7338-b0de-4565-a7d2-48135fff49c9
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 890cfbe78e644fa04609c8e5f6f2878d455893f6[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Mon May 13 14:56:12 2024 -0700

    [release] performance metrics for 2.22.0 (#45293)
    
    add performance metrics for ray 2.22.0
    
    Signed-off-by: kevin <kevin@anyscale.com>
    Co-authored-by: kevin <kevin@anyscale.com>

[33mcommit a5635987e47d9fdc7c1ea66fdd9b52b311caf2c9[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Mon May 13 14:27:07 2024 -0700

    [core][experimental] Fix broken channel test (#45297)
    
    Fixes test that was broken due a hidden merge conflict between #45092 and #45119.
    Related issue number
    
    Closes #45264.
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>

[33mcommit 285ce32ea1ca15ba619ba1967af3c353d7e44fa6[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 13 12:31:32 2024 -0700

    [ci] add RAYCI_FULL_PLATFORM_RELEASE to build full platform (#45298)
    
    Add `RAYCI_FULL_PLATFORM_RELEASE` so we can create a run from
    release-automation to build full platform. I also change
    `RAYCI_WEEKLY_RELEASE` to `RAYCI_RELEASE` (since
    `RAYCI_FULL_PLATFORM_WEEKLY_RELEASE` is too long).
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 67e8a9f796c09c30bbcd2b753dc610e2136b430a[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 13 10:58:36 2024 -0700

    [ci] pass RAYCI_WEEKLY_RELEASE to macos pipeline (#45296)
    
    We now have periodic run vs per-commit run on macos pipeline. The
    periodic runs all tests while the per-commit builds the wheels only.
    Pass the RAYCI_WEEKLY_RELEASE flag so that the periodic run can run all
    tests.
    
    Test:
    
    ![](https://media0.giphy.com/media/TejmLnMKgnmPInMQjV/200.gif?cid=5a38a5a2nbk1lk8jbd7q9og5hwibwjt7uk4yydvrxw931xor&ep=v1_gifs_search&rid=200.gif&ct=g)
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 8173015d34a5bcc7581dbd4fb03a0cb00a31dd99[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 13 10:28:46 2024 -0700

    [ci][microcheck/6] disable automerge on pullrequest updates (#45198)
    
    Add a github workflow to disable automerge on pull request updates. I
    tested that it works in another test repo:
    https://github.com/anyscale/reef-dev/pull/56
    
    Also add reef to be the owner for .github/workflow
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit d831f84c6e6b1412d2bc4ba585a988547134243f[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Mon May 13 09:15:08 2024 -0700

    [release-automation] More flexibility on the pipeline (#45254)
    
    - Only upload `linux_x86_64`, `mac x86_64`, and `mac arm64` wheels
    unless it's a full platform release.
    - Each of the wheel sanity check step has its own block step.
    - Uploading wheels to PyPI no longer requires all sanity checks to pass.
    This is up for release manager to judge whether the wheels are ready.
    - Add key for each of the step. This is to support automation that
    checks for BK job status (it's better to retrieve jobs from BK and
    identify with key than job label)
    
    ---------
    
    Signed-off-by: khluu <51931015+khluu@users.noreply.github.com>

[33mcommit 04f026707d46b4b8467987227df21f3e112e312d[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Mon May 13 17:26:34 2024 +0200

    [RLlib] Performance booster (cache in- and out-) specs RLModule; MetricsLogger speedups, avoid NestedDict, etc.. (#45285)

[33mcommit 96e3d3df32ad47ce2555bbed3a2c18bc30eab7fe[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Mon May 13 01:18:33 2024 -0700

    Add performance metrics for 2.21.0 (#45263)
    
    Branch created by automation.
    Merge 2.21.0 perf metrics in. The diff PR is:
    https://github.com/ray-project/ray/pull/45165/files
    
    Signed-off-by: kevin <kevin@anyscale.com>

[33mcommit 5656e70839bff3cd2081c0ae47fe5ff6d63605da[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Mon May 13 12:28:26 2024 +0800

    [dashboard] Remove jobInfoStub since GcsAioClient can already do that. (#45283)
    
    This PR removes usage of `JobInfoGcsService` in Dashboard, instead it uses GcsAioClient to talk to the GCS. No functional changes.
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit 07f81850e3842bba34b9c94845b364484b6d8cfe[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Sun May 12 19:33:36 2024 -0700

    [Data] Fix bug where you can't return objects and array from UDF (#45287)
    
    If you try to return arbitrary objects and arrays from a UDF, Ray Data errors complaining that "per-column arrays must each be 1-dimensional." The issue is that when Ray Data falls back to pandas, it doesn't use the tensor extension type. This PR fixes the bug.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 0702f7c6b9618a3eceba0f89f03201d5a8524f68[m
Author: WeichenXu <weichen.xu@databricks.com>
Date:   Mon May 13 01:51:05 2024 +0800

    [Data] Fix Ray databricks UC reader with dynamic Databricks notebook scope token (#45153)
    
    Set Ray databricks UC reader token by header `Authorization: Bearer` instead of `requests.post` auth param.
    
    This fixes bugs on databricks dynamic token.
    
    Signed-off-by: Weichen Xu <weichen.xu@databricks.com>

[33mcommit d4978cd3ce90b527b970640b4eeb3f183642a9df[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Sun May 12 09:07:24 2024 -0700

    [ci] add oss tag to test telemetry jobs (#45279)
    
    limit the runs to this repo
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 3bcdfd835cd744ca6ceac2f4f47d396aa15f5faa[m[33m ([m[1;32mclose-fix[m[33m)[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Sat May 11 18:36:17 2024 -0700

    [ci] add key to build linux, windows, macos wheels per commit (#45277)
    
    Add key to linux wheels so we can build them only on per commit run
    
    Test:
    - CI
    - postmerge: https://buildkite.com/ray-project/postmerge/builds/4409
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit db3016734131d111f23f740846d5486c32ccbf7d[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Sat May 11 17:24:43 2024 -0700

    Revert "[release] update ray version" (#45275)
    
    Reverts ray-project/ray#45274

[33mcommit 0a320210c2e9bdf636e4908346217d08d7497ac6[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Sat May 11 17:24:11 2024 -0700

    [release] update ray version (#45274)
    
    for 2.22.0
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit be1cc4bd28d87e8cb72be3c6287a95c17abdc203[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Sat May 11 15:30:04 2024 -0700

    [ci][microcheck/7] add go label on auto-merge (#45271)
    
    Add go label on auto-merge
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit abbfa37ed2a831a747be497ea351bfb60faa4c8a[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Sat May 11 07:44:44 2024 -0700

    [ci][bisect] do not apply filter to bisect test target (#45268)
    
    If a bisect test target is already given, do not filter it further based
    on tags, flaky tests, etc. This is so that even when the test is moved
    to flaky state, we can still use the same old rayci_step_id to run the
    test (not the rayci_step_id of the flaky job).
    
    Test:
    - CI
    - test: https://buildkite.com/ray-project/postmerge/builds/4406
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 7983e7b46268a7fef0d8eec294cdbc35aaa78abe[m
Author: can <can@anyscale.com>
Date:   Sat May 11 14:25:00 2024 +0000

    revert c97798eae97d1e840141f9cb0ec673b2f704a691
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit c97798eae97d1e840141f9cb0ec673b2f704a691[m
Author: can <can@anyscale.com>
Date:   Sat May 11 14:23:08 2024 +0000

    [ci][microcheck/7] add go label on auto-merge
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit da1c54cf7c23f1a2f92b4c9756c627ab954a1cdf[m
Author: can <can@anyscale.com>
Date:   Sat May 11 14:21:50 2024 +0000

    revert f3e2a266ed1036e099a147a3714d754be74d8099
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit f3e2a266ed1036e099a147a3714d754be74d8099[m
Author: can <can@anyscale.com>
Date:   Sat May 11 14:20:28 2024 +0000

    [ci][microcheck/7] add go label on auto-merge
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 795c3239fb3f46f3ab593dc01f0eafc985dd4eda[m
Author: Jiajun Yao <jeromeyjj@gmail.com>
Date:   Sat May 11 07:11:50 2024 -0700

    [Core] Fix worker process leaks after job finishes (#44214)
    
    Signed-off-by: Jiajun Yao <jeromeyjj@gmail.com>

[33mcommit a3d5874c9e0b1198aa2ed7e2fbbb0a29a57b3a14[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 18:55:59 2024 -0700

    [ci] add windows + serve tests back to postmerge (#45258)
    
    https://github.com/ray-project/ray/commit/e87a4b09d12918a35a014e747e67203d6ece2145#diff-feeb08c6318643fd49b0bf41b7755104dc400e1c58cb2f782bd7cf35292a993e
    mistakenly removes some of the buildkite steps from postmerge (because
    it's the || condition)
    - remove the `pipeline_id==premerge_pipeline_id` conditions on windows
    (it is now run on both premerge+postmerge with blocking)
    - add `pipeline_id==postmerge_pipeline_id` conditions to python 3.11
    serve tests
    
    Test:
    - CI
    - check that they build on postmerge:
    https://buildkite.com/ray-project/postmerge/builds/4399
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 79f39957dcd9c3550525134172eb87ab20b59ce1[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Fri May 10 17:08:17 2024 -0700

    [core][experimental] Accelerated DAG NCCL-based p2p channels for torch.Tensors (#45092)
    
    ## Why are these changes needed?
    
    This adds a NCCL-based transport option for torch.tensors. Here is an
    example of the API:
    
    ```python
        with InputNode() as inp:
            dag = sender.send.bind(inp)
            dag = dag.with_type_hint(TorchTensorType(SHAPE, DTYPE, transport="nccl"))
            dag = receiver.recv.bind(dag)
    
        compiled_dag = dag.experimental_compile()
    ```
    When `transport="nccl"` is specified, upon compile(), Ray will
    initialize a NCCL group with the actors involved. The reading actor(s)
    will `recv` on the NCCL communicator instead of reading from the default
    shared-memory channel.
    
    This PR also refactors channel types so that we now create
    `ChannelInterfaces` based on the type hints that appear in the DAG,
    either a `TorchTensorType` or the default `SharedMemoryType`.
    
    Current limitations:
    - p2p only, no collectives
    - Synchronizes CUDA stream after receiving data. This is because
    kernels following the NCCL op have no guarantee that the op succeeded,
    so it is not safe to read the received buffer unless we know that the op
    succeeded.
    - Shape and dtype of the tensor must be declared at compile time.
    
    ---------
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>
    Co-authored-by: SangBin Cho <rkooo567@gmail.com>

[33mcommit 094748e73ac8d608d26ced0ed615ee0039b0e5d8[m
Author: jackhumphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Fri May 10 17:07:35 2024 -0700

    Accelerated DAG channel lock fixes (#45119)
    
    This PR fixes two issues:
    1. When the error bit is set on a mutable object, a reader may return
    from ReadAcquire() without releasing the channel lock. This will cause
    deadlock if another reader calls ReadAcquire() on the channel.
    
    2. Abseil reports a deadlock on the channel lock, though this is a false
    positive. Note that Abseil only tracks deadlocks when compiled with
    debug mode (`export RAY_DEBUG_BUILD=debug`), so this issue will not
    appear otherwise.
    Specifically, the following occurs:
    (1) Abseil sees ReadAcquire() acquire the destructor lock followed by
    the _input_ channel lock.
    (2) When WriteAcquire() is called on the _output_ channel, Abseil sees
    that the thread already holds the _input_ channel lock and then the
    thread acquires the destructor lock.
    (3) Since Abseil sees these locks acquired in the reverse order in (2),
    it thinks there could be a deadlock.
    
    The deadlock check can only be disabled globally, which is undesirable,
    rather than for a specific lock. To resolve this issue for now, I
    replace absl::Mutex with std::mutex so that Abseil does not track
    deadlock on this lock.
    
    A better long-term solution is to rework the synchronization model so
    that a lock is not held after ReadAcquire() returns.
    
    ---------
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit 2a30bc40eae2e26e999daf14fb8b971bdbead12d[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 16:52:19 2024 -0700

    [ci] fix microcheck determinator script (#45256)
    
    - The current import is not reachable, use the constant from
    ray_release.test instead
    - Also in microcheck, the worker and worker_id can be emptry string
    (side effect of setting BUILDKITE_PARALLELISM=1), so teach the tester to
    handle that properly
    
    Test:
    - CI
    - microcheck run: https://buildkite.com/ray-project/microcheck/builds/22
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit da2d561fc5f0253602e2dfaf21142104dc4f90c2[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 16:06:34 2024 -0700

    [ci] add a gpu build for core (#45253)
    
    Add a gpu build for core to run multi-gpu tests. This is requested by
    core team since they are adding a few gpu tests for core DAG work.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 06e9e6df45830a1e3e8463ffceb52aba2d23bd8d[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 16:05:07 2024 -0700

    [ci] support new tests for microcheck (#45249)
    
    If someone add a new test in a PR, we should include that in the list of
    high impact tests to be run
    - I also fix the linux/macos/windows test prefix, the `//` is part of
    the test target, not the prefix; nothing break previously because the
    `//` part of the test target can actually be skipped
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit f1a3fb55f53fa354377e64be89da24f719c26235[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 15:12:38 2024 -0700

    [ci] update rayciversion (#45251)
    
    Version 0.6.0 enables auto retries for test flakiness
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit e87a4b09d12918a35a014e747e67203d6ece2145[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 14:48:21 2024 -0700

    [ci] remove the RAYCI_CONTINUOUS_BUILD flag (#45250)
    
    We have in flag in the past since we have a mixture of per-commit +
    periodic builds. Since everything is moved to periodic builds now, we
    don't need this flag any more.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit cb7d8c1ac6d38cb5e2451678cc190c4bf30f6ea3[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Sat May 11 04:01:45 2024 +0800

    [dashboard][perf] Add Version to all Ray metrics (#45242)
    
    This PR adds the label to all Ray metrics generated by the reporter_agent.py and dashboard API server. The label is useful for them because we can compare performance numbers between Ray versions.
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit f543a110d1b882850e732828c19b10daaa92b9e3[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Sat May 11 03:12:19 2024 +0800

    [core] New method `ray.experimental.get_local_object_locations` to get an object's location and size info without RPC. (#45071)
    
    This method is "best effort" in that it only returns if the core worker
    holds reference to that object ref, but it guarantees to not fire any
    RPCs so it's fast to call.
    
    Also fixed a bug: when the object size is unknown (e.g. task is still
    running), the function `get_object_locations` used to return an
    object_size of 2**64-1. Now, it's fixed to return a object_size of None.
    (Fixes #16321). The new function `get_local_object_locations` has the
    same behavior.
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit 108b7ba892a0978430bff227e5bc333b91dc3a90[m
Author: Kai-Hsun Chen <kaihsun@apache.org>
Date:   Fri May 10 12:00:36 2024 -0700

    [Doc][KubeRay v1.1.1] Use KubeRay v1.1.1 in KubeRay-related docs (#45185)
    
    Signed-off-by: Kai-Hsun Chen <kaihsun@anyscale.com>

[33mcommit c8096df3b491376378b0404474d99426f8187add[m
Author: Kai-Hsun Chen <kaihsun@apache.org>
Date:   Fri May 10 11:59:53 2024 -0700

    [kuberay][autoscaler] Update KubeRay version to v1.1.1 (#45184)
    
    Signed-off-by: Kai-Hsun Chen <kaihsun@anyscale.com>

[33mcommit a8762f30bbb58a509ffce36d9216e8fd4173ce0b[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 11:57:15 2024 -0700

    [ci] migrate reef test to use test_in_docker (#45239)
    
    Migrate reef tests to use test_in_docker so that they can be included in
    microcheck. This PR also:
    - Add a BUILD_TYPE=skip to skip building ray in test_in_docker
    - Make the ci.tests.yaml file (that one declares flaky tests per team)
    optional. I'll working towards deprecating them.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 32956415cc5a4402fd7f0c3d25385001908fec44[m
Author: Antoni Jamiołkowski <50143141+antoni-jamiolkowski@users.noreply.github.com>
Date:   Fri May 10 17:32:38 2024 +0200

    [Doc] Update key-concepts.md (#45245)
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    
    The text in the [DeploymentHandle (composing
    deployments)](https://docs.ray.io/en/latest/serve/key-concepts.html#deploymenthandle-composing-deployments)
    paragraph of the Ray Serve documentation is not consistent with the code
    snippet linked below it.
    
    <!-- Please give a short summary of the change and the problem this
    solves. -->
    
    ## Related issue number
    
    There isn't related issue. Should I create one?
    
    <!-- For example: "Closes #1234" -->
    
    ## Checks
    
    - [ ] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [ ] I've run `scripts/format.sh` to lint the changes in this PR.
    - [ ] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [ ] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - [ ] Unit tests
       - [ ] Release tests
       - [ ] This PR is not tested :(
    
    Signed-off-by: Antoni Jamiołkowski <50143141+antoni-jamiolkowski@users.noreply.github.com>

[33mcommit 6f344f368a89e420e03b3eeed1579b80d1eb8d96[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 07:02:01 2024 -0700

    [ci][bisect/2] turn on bisect for linux and windows (#45208)
    
    Turn on bisect for linux and windows by giving some rate limit
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 84d9a78769c69439f0131c362b56c55f94a8f428[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 06:39:22 2024 -0700

    [ci] run flaky tests twice (#45222)
    
    As we move linux + windows test to periodic run, let's run flaky tests
    twice, similar to what we do for macosx. This will allow the state
    machine to have enough signals to move flaky tests around quick enough.
    
    Test:
    - CI
    - postmerge: https://buildkite.com/ray-project/postmerge/builds/4380
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 2c0e4f93771c4887f0fb286ca57a8d541f29583e[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 10 06:38:53 2024 -0700

    [ci] update rayciversion (#45227)
    
    Update rayciversion to support buildkite step max parallelism and
    select+tag filtering, etc.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit bfbdb3959acb2bdab72ff7b9b2f2f4764df20354[m
Author: Peyton Murray <peynmurray@gmail.com>
Date:   Fri May 10 01:38:58 2024 -0700

    [Doc] Update Ray Summit banner colors (#45241)
    
    The current black text on blue background design for the Ray Summit
    banner is low contrast. This PR changes the text to white.
    
    Closes #45224.

[33mcommit f591f43b3f61a4c24de92fa25996e4104cc56baf[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 9 19:00:07 2024 -0700

    [ci] remove //python/ray/data:test_streaming_integration from flaky list (#45234)
    
    Remove this test from flaky list. We break it previously because it is
    here. The test is not flaky, and also automation handles flaky tests
    nowadays.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 6bdb0217259020cbb284d2c8a45535688bd29af9[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Thu May 9 15:49:38 2024 -0700

    [rllib] add werkzeug as explicit dependency (#45216)
    
    to handle cases where it is not installed inside the base image
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit adc18b87cd8488974711963c29bbe34ba134fb8a[m
Author: Hao Chen <chenh1024@gmail.com>
Date:   Thu May 9 15:48:12 2024 -0700

    [data] add debugging info for SplitCoordinator (#45226)
    
    Add debugging info to debug
    https://github.com/ray-project/ray/issues/45225.
    The bug is hard to reproduce manually. Add debugging info, so that when
    it happens, we have enough info to investigate the issue.
    ---------
    
    Signed-off-by: Hao Chen <chenh1024@gmail.com>

[33mcommit 866e03e9edd045d4da3bc850a34f222fb6a4e209[m
Author: Scott Lee <scottjlee@users.noreply.github.com>
Date:   Thu May 9 14:27:07 2024 -0700

    [Data] Add function to dynamically generate `ray_remote_args` for Map APIs (#45143)
    
    Adds a new parameter`ray_remote_args_fn` to Map APIs (`map()`, `map_batches()`, `flat_map()`, `filter()`), which allows the user to specify a function which returns a dict of Ray remote args be passed to an actor initialized from ActorPoolMapOperator. This function is called each time a worker is initialized, allowing the user to specify the parameters for every worker (e.g. setting the scheduling strategy at runtime).
    
    Currently, Ray Data only allows passing static ray remote args, which has the limitation of sharing the placement group for all actors. This feature allows users to create different placement groups for each actor. For example, this will enable users to use Ray Data with vLLM with tensor parallel size > 1.
    
    Signed-off-by: Scott Lee <sjl@anyscale.com>

[33mcommit fa61109f3fd26c543ad9a36794c8a478bc0a7113[m
Author: Kai-Hsun Chen <kaihsun@apache.org>
Date:   Thu May 9 12:59:28 2024 -0700

    [Doc][KubeRay] Improve KubeRay docs based on CUJ (#45212)

[33mcommit 112e859f9b4499f9005cbe025f9f1477c8fcaa06[m
Author: Justin Yu <justinvyu@anyscale.com>
Date:   Thu May 9 12:56:50 2024 -0700

    [train] `RayTrainReportCallback` should only save a checkpoint on rank 0 for xgboost/lightgbm (#45083)
    
    This PR adds a condition to only save and report a checkpoint on the
    rank 0 worker for xgboost and lightgbm. This prevents unnecessary
    checkpoints being created, since all data parallel workers have the same
    model states. Note: this also accounts for usage in Tune, where
    `ray.train.get_context().get_world_rank()` returns `None`.
    
    Fix `checkpoint_at_end` for the xgboost callback to avoid duplicate checkpoints.
    ---------
    
    Signed-off-by: Justin Yu <justinvyu@anyscale.com>
    Co-authored-by: Hongpeng Guo <hpguo@anyscale.com>

[33mcommit 45c2c4f4560b739053bcff02d2ba93f529507f14[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 9 12:29:45 2024 -0700

    [ci] add both async and non-async version of get_test_results (#45221)
    
    The async version doesn't seem to work too on windows
    (https://buildkite.com/ray-project/postmerge/builds/4379#018f5d33-32d2-4212-9e25-ed4ea937be3b/12248-12440).
    I added a non-async version on this PR, and use the async version on the
    automation that runs on linux only
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 4f12c150cac5631f2ef5e690929ea4b7c8b78e5c[m
Author: Hao Chen <chenh1024@gmail.com>
Date:   Thu May 9 10:35:43 2024 -0700

    [Data][Train] Allow manually setting resource limits for training jobs (#45188)
    
    Previously it's not possible to manually set data resource limits for
    training jobs.
    Because we automatically set "exclude_resources" for training jobs, and
    "exclude_resources" and "resource_limits" cannot be both set.
    
    This PR fixes this issue by not automatically setting
    "exclude_resources" when "resource_limits" are already set by the user
    
    ---------
    
    Signed-off-by: Hao Chen <chenh1024@gmail.com>

[33mcommit 659ddeab2eca6e6c2b232a04b38ccb3547ac123f[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 9 09:23:42 2024 -0700

    [ci] increase time out for learning_tests_cartpole_dqn_envrunner (#45220)
    
    The linux://rllib:learning_tests_cartpole_dqn_envrunner seems to be
    flaky/timedout. I increase the time out and move to test to not running
    in parallel with other tests.
    
    Test:
    - CI
    - https://buildkite.com/ray-project/postmerge/builds/4381
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 364e65ec9614fa39b4cdf354416a281107003795[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 8 21:36:14 2024 -0700

    [ci][bisect/1] add bisect for linux+windows tests (#45178)
    
    Add the LinuxValidator for bisect job, which works in the following way:
    - It create a build in the postmerge pipeline with 'RAYCI_RELECT' and
    'RAYCI_BISECT_TEST_TARGET' to run only the target under bisect
    - Wait for the build to finish and return accordingly to the status
    - Also skip recording test results on bisect run
    
    Test:
    - CI
    - test:
        - bisect job: https://buildkite.com/ray-project/bisect/builds/1104#_
    - trigger single test run on postmerge:
    https://buildkite.com/ray-project/postmerge/builds/4353#_
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit bc801455320ffb7e54aae99256a8b382ce7daa67[m
Author: Kai-Hsun Chen <kaihsun@anyscale.com>
Date:   Wed May 8 20:59:41 2024 -0700

    [Core][1/n] Core structured logging (#45098)
    
    This PR implements:
    
    - JSONFormatter: Convert LogRecord into a JSON string.
    - CoreContextFilter: Add Core-related context to LogRecord.
    
    Signed-off-by: kaihsun <kaihsun@anyscale.com>

[33mcommit 678d3a80aad7edd05352cb73a0fce02b705a98ae[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Wed May 8 19:58:08 2024 -0700

    [rllib] remove installing pytorch in release test setup (#45213)
    
    these packages should be already included in ray-ml image building
    
    reinstalling it actually might cause issues / conflicts.
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit c3d839f48ccb5962c16625d626bd85a44eac566b[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 8 19:23:35 2024 -0700

    [ci][microcheck/5] add microcheck jobs (#45094)
    
    - Adding the `--run-high-impact` flag to tester, which can be controlled
    through an environment variable
    - Add microcheck pipeline definition that has the --run-high-impact
    tests set to True
    
    Test:
    - CI
    - microcheck: https://buildkite.com/ray-project/microcheck/builds/18
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 1d88a88cc3cc0acb7aeb0bb208d937bb8fbab587[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 8 19:22:25 2024 -0700

    [ci][bisect/0] pass Test object into bisector (#45203)
    
    Pass Test object into bisector. This will abstract the burden of parsing
    the test type from the validator.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit c13fb228f1db51c0a2f267f36d16cac706b2986e[m
Author: Hao Chen <chenh1024@gmail.com>
Date:   Wed May 8 15:30:22 2024 -0700

    [data] fix bugs introduced by autoscaler refactor (#45200)
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    
    Fix following bugs introduced by #45002:
    * `autoscaler.try_trigger_scaling` not called when `select_op_to_run`
    returns None.
    * scaling up condition on `under_resource_limits`.
    
    
    `python/ray/data/tests/test_streaming_integration.py::test_e2e_autoscaling_up`
    should pass after this fix.
    
    ## Related issue number
    
    Closes https://github.com/ray-project/ray/issues/43481
    
    ## Checks
    
    - [ ] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [ ] I've run `scripts/format.sh` to lint the changes in this PR.
    - [ ] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [ ] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - [ ] Unit tests
       - [ ] Release tests
       - [ ] This PR is not tested :(
    
    Signed-off-by: Hao Chen <chenh1024@gmail.com>

[33mcommit 35bc642db87c9cf86cdeb92b79cfa659567ee58e[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Wed May 8 14:53:05 2024 -0700

    Update Docker dependencies for 2.21.0 (#45206)
    
    Commit:
    https://github.com/ray-project/ray/commit/725d958473dc7f957092f52b4680a72302e0843f
    Build: https://buildkite.com/ray-project/postmerge/builds/4363
    
    Signed-off-by: kevin <kevin@anyscale.com>

[33mcommit d46a9b333b96aa10665177011ae7475177a5a14b[m
Author: Chi-Sheng Liu <chishengliu@chishengliu.com>
Date:   Thu May 9 04:57:36 2024 +0800

    [Docs][Kuberay] Update Ray version and sample config files for Grafana (#45177)

[33mcommit 973ad07b661da43beda328f4db5470b1086d52b1[m
Author: Christopher Zhang <chris@anyscale.com>
Date:   Wed May 8 13:56:21 2024 -0700

    Update link of 'Manage Ray on Anyscale' (#45205)

[33mcommit 3e6b30a4365f7ecb81bd6fa105b159e13b34e1f3[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Wed May 8 13:31:00 2024 -0700

    [Data] Don't raise batch size error if `num_gpus=0` (#45202)
    
    Ray Data raises an error if you use GPUs and don't specify a batch size. However, if you specify num_gpus=0, you still get an error. This PR corrects this confusing behavior.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 63d2beefe3448959a37fe9de603d1d4ac0495f1e[m
Author: Alan Guo <aguo@anyscale.com>
Date:   Wed May 8 13:09:33 2024 -0700

    Improve log viewer (#45190)
    
    Fixes two bugs:
    
    When selecting text in the log viewer, a re-render of the viewer will de-select text. Even if the log viewer was not changed. Now, we will avoid re-rendering the log viewer unless the props have changed.
    When selecting text, the line numbers no longer get selected. We moved the line numbers to be pseudo-elements instead of spans.

[33mcommit 725d958473dc7f957092f52b4680a72302e0843f[m
Author: Bryce Huang <bhuang@anyscale.com>
Date:   Wed May 8 13:28:24 2024 -0500

    [Dashboard] Add api to get cluster id from usage state head (#45140)
    
    Signed-off-by: bhuang <bhuang@anyscale.com>

[33mcommit 6a266db05a8228a7d66cb88e8b1ced862376edf8[m
Author: Alexey Kudinkin <ak@anyscale.com>
Date:   Wed May 8 09:26:23 2024 -0700

    [Dashboard] Bumped default `REPORTER_UPDATE_INTERVAL_MS` to 5s (#45193)
    
    Signed-off-by: Alexey Kudinkin <ak@anyscale.com>

[33mcommit f100a39f7c7ea20ee0adb45a3040247c1e32478f[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Wed May 8 16:54:18 2024 +0200

    [RLlib] Add a package dependency to the rendering example to keeps users from running into errors. (#45173)

[33mcommit 7589bd56803d9d591809fba83b9c782bc06e9333[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Wed May 8 13:39:58 2024 +0200

    [RLlib] Change (prioritized) SA episode buffer to return episode lists (instead of batch) from `sample()`. (#45123)

[33mcommit f2b0d91d9db672504991efa3795134b2457f40c4[m
Author: Rui Qiao <161574667+ruisearch42@users.noreply.github.com>
Date:   Tue May 7 17:19:12 2024 -0700

    [core][experimental] AccDag: Support more than one tasks per actor (#44259)
    
    Accelerated Dag currently does not support multiple methods within the same actor. This PR adds the support.
    
    In this PR, the methods from the same actor are first grouped together, and then executed in the same execution loop based on their submission (binding) order.
    Related issue number
    
    Closes #44194
    
    ---------
    
    Signed-off-by: Rui Qiao <ruisearch42@gmail.com>

[33mcommit f1d8862c6c57c31f5e3e588ef775382c9c345e6f[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Tue May 7 17:14:04 2024 -0700

    [ci][microcheck/4] add a command to query step ids for microcheck (#45170)
    
    As title, add a command to query rayci step ids that can trigger the
    microcheck tests. We will use this in combination with the -select from
    the rayci to build the buildkite step graph for microcheck pipeline.
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 5af5789165da327acdfd1aaa2b1f4eba0d410475[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Tue May 7 15:01:18 2024 -0700

    [ci] remove some old bazel flags, and add debug flavor (#36784)
    
    add linux-debug / windows-debug / macos-debug for debug usage
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 7be30955ac28e380900fa8ac2dc4cafb88d198ca[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Tue May 7 12:48:19 2024 -0700

    [ci] update rayci version (#45183)
    
    I just release a new rayci version, let's upgrade it.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 2ad4e33e9325b1794d61156ffa59cb492d2a6a41[m
Author: Hao Chen <chenh1024@gmail.com>
Date:   Tue May 7 12:05:03 2024 -0700

    [data] introduce abstract interface for data autoscaling (#45002)
    
    * Introduce an abstract interface for data autoscaling, making
    autoscaling behavior easier to customize and extend. Main components:
    * `Autoscaler`: the abstract interface responsible for all autoscaling
    decisions, including cluster and actor pool autoscaling.
    * `AutoscalingActorPool`: abstract interface that represents an actor
    pool that can autoscale.
      * `DefaultAutoscaler`: default implementation.
    * No major code logic changes in this PR, except
    * fixing a small bug of calculating actor pool util (should be
    `num_active_actors/current_size` instead of
    `num_running_actors/current_size`).
    * `ActorPoolMapOperator.incremental_resource_usage` now doesn't consider
    autoscaling, as we are abstracting autoscaling out of the op. Previously
    the info wasn't useful either.
      *  Removed actor pool autoscaling logic for bulk executor.
    
    ---------
    
    Signed-off-by: Hao Chen <chenh1024@gmail.com>

[33mcommit 4d4c9b559ccee8f29163a776aa4197f7bd3cf4be[m
Author: angelinalg <122562471+angelinalg@users.noreply.github.com>
Date:   Tue May 7 08:20:54 2024 -0700

    Update performance.md (#45169)
    
    Follow up to suggest some style edits.
    
    Signed-off-by: angelinalg <122562471+angelinalg@users.noreply.github.com>

[33mcommit 3b390118bbae934614b4eede878dd3cb49f90cc4[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 6 22:22:50 2024 -0700

    Revert "[ci] mac dashboard flaky test jobs" (#45171)
    
    Reverts ray-project/ray#45126. Break something.

[33mcommit 291dc296a30a53735a2a699e60e0eae1e911c1ce[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 6 17:07:17 2024 -0700

    [ci] persist rayci step id to test result (#45164)
    
    Persist rayci step id to test result. RAYCI_STEP_ID is the unique
    identifier of the buildkite test job definition.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 2696f5757eae773d09b76d29a56526538a865ab7[m
Author: Ismail <17896468+shaikhismail@users.noreply.github.com>
Date:   Mon May 6 15:46:53 2024 -0600

    [Kuberay] Update docs to use ARM based images for Apple M1/M2 Macbooks (#45142)
    
    Signed-off-by: Ismail Shaikh <ismailnitr@gmail.com>

[33mcommit 1bda55566c49db68dad16392b2b8ffd8cd5ffdbd[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Mon May 6 14:45:56 2024 -0700

    [Data] Don't load Arrow `PyExtensionType` by default (#45084)
    
    Loading PyExtensionType types can expose you to arbitrary code execution. To avoid exposing users to this vulnerability, this PR disables loading PyExtensionType by default.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit be5af52e2a91b809789638bc92e039016392447f[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 6 11:43:45 2024 -0700

    [ci] mac dashboard flaky test jobs (#45126)
    
    - Add flaky job for mac dashboard test
    - Merge the flaky small, medium and large job into one
    
    Note that I use `bazel cquery` instead of `bazel query` as `cquery` is
    platform awareness.
    
    Test:
    - CI
    (https://buildkite.com/ray-project/premerge/builds/25495#018f403d-68fe-4674-a8b1-5b9a62bc246a)
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit b59afebb91136e9f6d91cc642fb8f6c39bafb3e3[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Mon May 6 11:12:01 2024 -0700

    [release-automation] Add TMP_DIR/bin back in PATH (#45081)
    
    - This was previously removed by mistake to fix the Mac wheel sanity
    check issue, which causes `bazel not found` since bazel is installed in
    `tmp_dir/bin`.
    - Conda is installed in `tmp_dir/miniconda3/bin` so this shouldn't
    affect how conda works.
    
    ---------
    
    Signed-off-by: khluu <51931015+khluu@users.noreply.github.com>

[33mcommit e5c80c6f859bb70f367bebed229068721c60ffb7[m
Author: Jari Rosti <jari.rosti@gmail.com>
Date:   Mon May 6 21:03:27 2024 +0300

    [Data] Do not show AllToAll progress bar if the disable flag is set (#45136)
    
    AllToAll main progress bar is shown even if progress bars are disabled.
    
    Signed-off-by: Jari Rosti <jari@iprally.com>

[33mcommit 351e5d90c78818f4f788042567097dad34631334[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 6 10:42:30 2024 -0700

    [ci][clean/2] add a flag to disable test state machine (#45157)
    
    Add a flag to disable the test state machine in the ci global config.
    Upstream doesn't have many features required by the test state machine
    (creating github tickets, bisection, etc.) so need to disable it.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 49d8948323daa99d9e4b7e369b4913ab4a560252[m
Author: WeichenXu <weichen.xu@databricks.com>
Date:   Tue May 7 01:25:29 2024 +0800

    [spark] Fix GPUs per spark worker node calculation (#45125)
    
    Fix GPUs per spark worker node calculation:
    
    In current master code, if spark.task.resource.gpu.amount is set to 0, "GPUs per spark worker node" variable is set to 0 , but the value "GPUs per spark worker node" should not be affected by spark.task.resource.gpu.amount. In many cases, users set spark.task.resource.gpu.amount to 0 to avoid spark SQL jobs using GPU, but the spark cluster worker nodes still have GPU devices.
    
    Signed-off-by: Weichen Xu <weichen.xu@databricks.com>

[33mcommit 99873bad1d5b0f74e282dc8b55e7783d81eb30f5[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon May 6 09:52:42 2024 -0700

    [ci][clean/01] remove RAYCI_DISABLE_TEST_DB feature flag (#45155)
    
    This feature flag is used to gate the rollout of test db feature. Remove
    it now, the feature has been in production for a while.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit bcb27207e623e14c9bce3b1f37adca064513027f[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Mon May 6 09:38:28 2024 -0700

    [ci] upgrade rayci toolchain to 0.3.0 (#45137)
    
    can be used to select jobs now.
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 7b7278485d3ffcc840f4bf8db4034813cb34b985[m
Author: Jiajun Yao <jeromeyjj@gmail.com>
Date:   Mon May 6 08:18:13 2024 -0700

    [Core] Use GCS cluster id as the usage stats reported session id (#45130)
    
    After #36517, each Ray cluster has a unique ClusterID and this PR reuses this cluster id as the session id for usage stats report instead of generating a new id.
    
    Signed-off-by: Jiajun Yao <jeromeyjj@gmail.com>

[33mcommit d0ed63fad6c80d7d2f7425aafd76c44cd9e5dde2[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Mon May 6 14:27:28 2024 +0200

    [RLlib] Fix overflow error b/c of int division in `Filter` updates. (#45154)

[33mcommit 027f556c494336b85d5ab6713271c507b4c47655[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Sun May 5 11:27:37 2024 +0800

    [dashboard] Fixes the CPU percent metrics for Dashboard process. (#45124)
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit 277330752bb4dc3c4d5fb82501e757b062b5fada[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri May 3 17:52:24 2024 -0700

    [ci] fix mac build (#45139)
    
    Fix mac build, now that we upgrade openjdk to use temurin
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 4937ac3b4beb122e9cbde3387de6eb939bf80aa9[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Fri May 3 16:55:17 2024 -0700

    [core][accelerated DAGs] Make DAG teardown blocking and fix bug during close (#45099)
    
    ## Why are these changes needed?
    
    Contains a few fixes related to DAG teardown:
    - Removes an unnecessary `.close()` call that would error if the DAG has
    a single output (instead of a MultiOutputNode)
    - Makes `dag.teardown()` blocking to ensure that actors can be reused
    after the teardown call returns.
    - Makes DAG teardown in `__del__` asynchronous. if synchronous, this can
    hang the driver upon shutdown. I'm not exactly sure why but I believe
    this happens if the CoreWorker is shut down before `dag.teardown()` is
    complete.
    
    ---------
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>

[33mcommit 36749b8314aa5c7d1e16ea3658421ade3be758a8[m
Author: Nikita Vemuri <nikitavemuri@users.noreply.github.com>
Date:   Fri May 3 16:01:22 2024 -0700

    [Jobs][Logs] Write JobSupervisor logs to file (#45086)
    
    - Write JobSupervisor system logs to file at jobs/supervisor-{job_id}.log and stream to stderr so it can continue to be picked up in the worker-*.err logs
    - This allows for better organization and persistence of the JobSupervisor logs
    
    Signed-off-by: Nikita Vemuri <nikitavemuri@anyscale.com>
    Co-authored-by: Nikita Vemuri <nikitavemuri@anyscale.com>

[33mcommit 8ed218f02c91fe103cff35312b09b5cb47108e37[m
Author: Gene Der Su <e870252314@gmail.com>
Date:   Fri May 3 15:06:30 2024 -0700

    [Serve] update serve build multi app doc (#45134)
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    
    A user reported the `--multi-app` flag doesn't work. This option is
    already deprecated from the previous migration work and by default the
    command will generate multi-app config. This PR updated the docs on
    example command and the resulting config. This seems to be the only
    place that's still mentioning `--multi-app`.
    
    ## Related issue number
    
    <!-- For example: "Closes #1234" -->
    
    ## Checks
    
    - [ ] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [ ] I've run `scripts/format.sh` to lint the changes in this PR.
    - [ ] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [ ] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - [ ] Unit tests
       - [ ] Release tests
       - [ ] This PR is not tested :(
    
    Signed-off-by: Gene Su <e870252314@gmail.com>

[33mcommit bbcdc496d69ce1c35154f1eeb0aa5d7ea916196c[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Fri May 3 13:31:39 2024 -0700

    [core][experimental] Pass torch.Tensors through accelerated DAGs (#44825)
    
    This PR adds support for passing torch.Tensors to local actors in an
    accelerated DAG, via Ray's shared memory store. It supports the
    following transfer cases, as long as the sending and receiving actors
    are on the same node: CPU-CPU, CPU-GPU, GPU-CPU, GPU-GPU (via CPU).
    
    This iteration requires the user to explicitly declare which DAG nodes
    contain torch.Tensors and the tensors' shape and dtype, with a new
    `with_type_hint` decorator. For example:
    
    ```python
        with InputNode() as inp:
            dag = sender.send.bind(inp)
            dag = dag.with_type_hint(TorchTensorType(SHAPE, DTYPE))
            dag = receiver.recv.bind(dag)
    
        compiled_dag = dag.experimental_compile()
    ```
    This declaration isn't necessarily useful for this PR, but it is
    included now because it makes it much simpler to efficiently support
    other cases in the future, such as p2p GPU-GPU transfers.
    
    When a TorchTensor node is declared, the serialization of the underlying
    torch.Tensor is performed differently from vanilla Ray. In particular,
    we store the numpy view of the data. On the receiving actor, we
    deserialize to a torch.Tensor and move it to the device assigned to the
    actor, if any. Microbenchmarking shows that this is 4x faster than
    normal pickling and unpickling of a torch.Tensor, likely due to Ray's
    serialization support for numpy. Also, when moving the torch.Tensor to a
    GPU on the receiving side, we can avoid one extra data copy by copying
    directly from Ray's shared memory buffer to GPU memory.
    
    Limitations:
    - Only supports tasks that directly return a torch.Tensor, i.e. the
    torch.Tensor cannot be nested in other data.
    - The task must declare the shape and dtype of its torch.Tensor at DAG
    compile time.
    - Does not support local p2p GPU-GPU transfer, either using `cudaMemCpy`
    or NCCL. Microbenchmark shows this can be >10x faster than transfer via
    CPU.
    - Does not support multinode GPU-GPU transfer, e.g., via RPC between
    hosts or NCCL.
    
    ---------
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>

[33mcommit ab8e10a4475f9af4c6de80d9fb6e3915da92bb3a[m
Author: matthewdeng <matt@anyscale.com>
Date:   Fri May 3 09:21:46 2024 -0700

    [dependencies] recompile tensorboardx (#45090)
    
    Bumping `tensorboardx` to support `protobuf>4`.
    
    Signed-off-by: Matthew Deng <matt@anyscale.com>

[33mcommit 45d56405848768383aaadafc1ef87a776a4517e7[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Fri May 3 14:28:11 2024 +0200

    [RLlib] - Fix APPO RLModule inference-only problems. (#45111)

[33mcommit 6ab48be87ad53a8e7f18ed304e5ae82883600646[m
Author: Cindy Zhang <cindyzyx9@gmail.com>
Date:   Thu May 2 18:13:34 2024 -0700

    [serve] Fix controller recovery bug (#45118)
    
    [serve] Fix controller recovery bug
    
    When controller recovers and there are autoscaling deployments whose
    configs don't have `initial_replicas` set, controller recover fails
    because of this bug.
    
    I've fixed the bug and added a test for it.
    
    Signed-off-by: Cindy Zhang <cindyzyx9@gmail.com>
    
    Signed-off-by: Cindy Zhang <cindyzyx9@gmail.com>

[33mcommit 44659d51f647875b4ba8792960054cfab1436f0e[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 2 17:50:47 2024 -0700

    [ci][micro/4] support async query of test results (#45095)
    
    - Support async query of test results. This speed up the query
    significantly, especially for long test history
    - Increase the test history of microcheck coverage to 500. 100 is about
    one week of data which is too short for activities in the ray
    repository.
    
    Test:
    - CI
    - microcheck jobs:
    https://buildkite.com/ray-project/postmerge/builds/4293#_
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 9a3b22b566119b6c2a1ce479c843e6a4414fd9e5[m
Author: Peyton Murray <peynmurray@gmail.com>
Date:   Thu May 2 14:32:39 2024 -0700

    [Doc] add ray summit banner 2024 (#45069)
    
    with link to submit proposals

[33mcommit 4ac54f10d1c8c88015e1a682ea8a068ba9938045[m
Author: Nikita Vemuri <nikitavemuri@users.noreply.github.com>
Date:   Thu May 2 14:10:23 2024 -0700

    [Jobs] Move JobSupervisor and JobLogStorageClient to separate files  (#45116)
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    - Refactor to move `JobSupervisor` and `JobLogStorageClient` to separate
    file for https://github.com/ray-project/ray/pull/45086
    - This PR contains no logical changes, so no unit tests added
    
    ## Related issue number
    
    <!-- For example: "Closes #1234" -->
    
    ## Checks
    
    - [x] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [x] I've run `scripts/format.sh` to lint the changes in this PR.
    - [ ] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [x] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
    - [x] Unit tests -- no logical changes so existing unit tests are
    sufficient
       - [ ] Release tests
       - [ ] This PR is not tested :(
    
    ---------
    
    Signed-off-by: Nikita Vemuri <nikitavemuri@anyscale.com>
    Co-authored-by: Nikita Vemuri <nikitavemuri@anyscale.com>

[33mcommit 24bf8a115f7e55fee0a52e8de9337c647650bab5[m
Author: Cheng Su <scnju13@gmail.com>
Date:   Thu May 2 14:04:41 2024 -0700

    [Data] Add `read_lance` API to read Lance Dataset (#45106)
    
    This PR adds the capability to load a LanceDB dataset into a Ray Dataset.
    
    Signed-off-by: Brent Bain <brent@anyscale.com>
    Signed-off-by: Cheng Su <scnju13@gmail.com>
    Co-authored-by: Brent Bain <brent@anyscale.com>

[33mcommit a6569d47bfc5e6b04de7039836e16da4f191c65f[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 2 13:50:08 2024 -0700

    [ci][bisect] remove gating/feature flag for ci bisect (#45114)
    
    The feature flag was to guard any breakages in production; has been
    running well in production so i'm removing the flag
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 114f2c60db998f9ba5d58324adc65b9f1bbc349b[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Fri May 3 03:54:27 2024 +0800

    [dashboard][perf] Offload reporter_head CPU heavy JSON parsing to a thread. (#45048)
    
    This saves the event loop from being blocked.
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit 4b7e1f79300eeee38b887f6a55d450a9bf883b30[m
Author: Peyton Murray <peynmurray@gmail.com>
Date:   Thu May 2 12:48:16 2024 -0700

    [Doc] Fix broken references in serve documentation (#45113)
    
    fixes broken links in Serve documentation in preparation for turning on Sphinx's nitpicky mode.

[33mcommit d310a2b052e74a80f8578184fbee42b491fafffc[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu May 2 21:37:59 2024 +0200

    [RLlib] Metrics do-over 05: Add example script for a custom `render()` method (with WandB videos). (#45107)

[33mcommit 37b0f69d10d607e31f673b18aa21c0f0e4da76d5[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu May 2 09:55:05 2024 -0700

    [ray 2.20.0] core performance metrics (#45085)
    
    Core performance metric log. This has been reviewed for 2.20.0. This PR
    just commits the log into the master branch.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit ab5871bd5abda0fadb4a552f805ba4da1fae1889[m
Author: st-- <st--@users.noreply.github.com>
Date:   Thu May 2 19:53:54 2024 +0300

    [tune] remove deprecated `ray.air.callbacks` modules (#45104)
    
    
    https://github.com/ray-project/ray/pull/36984 removed
    `warn_structure_refactor`, but failed to remove the `ray.air.callbacks`
    submodules that still rely on it. While arguably in my specific case the
    presence of their remainder helped me update some old code, it would be
    cleaner if ray failed with an ImportError, making it clear that it's an
    issue on the user side, rather than something that looks like it's a
    bug.
    
    Signed-off-by: ST John <st--@users.noreply.github.com>

[33mcommit c359eb8be2601e6ae531e47ee08d80bd777a4a70[m
Author: Alan Guo <aguo@anyscale.com>
Date:   Thu May 2 09:12:15 2024 -0700

    Fix dashboard UI bugs (#45101)
    
    Fixes:
    
    Node page not sorting correctly
    Actors table missing the "page size per page" input.
    Splits actor filters into two rows since there are many of them
    When adding a filter on a second page that filters so there are less than 2 pages, we rendered an empty list instead of the last page of data.

[33mcommit d84f265953192f7aa02bdd7f9e400f3fe21346c6[m
Author: Gene Der Su <e870252314@gmail.com>
Date:   Thu May 2 08:33:43 2024 -0700

    [Serve] fix control+c after `serve run` doesn't shutdown serve components (#45087)
    
    Added a test to ensure this is captured and fix it.

[33mcommit de9090c2310d3a1195bff261c2284ac2727f6182[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu May 2 17:32:18 2024 +0200

    [RLlib] Fix 2 broken CI test cases: `test_learner_group` and `cartpole_dqn_envrunner`. (#45110)

[33mcommit afba35d797937452122a78e35b277c0ba8c388e4[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu May 2 16:59:49 2024 +0200

    [RLlib] Metrics do-over 04: New env rendering/video example script (through custom callbacks using MetricsLogger). (#45073)

[33mcommit d0692479ccdef50ade2c142e1c4780b2979fbf90[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu May 2 15:11:06 2024 +0200

    [RLlib] Use `config` (not `self.config`) in `Learner.compute_loss_for_module` to prepare these for multi-agent-capability. (#45053)

[33mcommit 711f386b211bd24233df8765e426c8db7740c6c1[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Thu May 2 14:27:09 2024 +0200

    [RLlib] Fix numerical overflow in `global_norm` and `norm` gradient clipping in case of (many) large gradient matrices. (#45055)

[33mcommit eec64b2d05b2c490b1b5280151d81eabd32ae127[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu May 2 14:07:40 2024 +0200

    [RLlib] Metrics do-over 06: Remove `render_images`/`with_render_images` from MAEps and -runner and deprecate `env_render` config option. (#45109)

[33mcommit 0e5cfafed2e0de992e53b0d650b5317947dc4240[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Thu May 2 12:01:36 2024 +0200

    [RLlib] - Adding missing `__init__.py` in 'algorithms/sac/torch' that was throwing an error. (#45070)

[33mcommit dcbf195a2d22a9968a95a15cb5304143a35e2e49[m
Author: Hongchao Deng <hongchaodeng1@gmail.com>
Date:   Wed May 1 20:45:03 2024 -0700

    [core] handle unserializable user exception (#44878)
    
    Signed-off-by: hongchaodeng <hongchaodeng1@gmail.com>
    Signed-off-by: Hongchao Deng <hongchaodeng1@gmail.com>
    Co-authored-by: angelinalg <122562471+angelinalg@users.noreply.github.com>

[33mcommit 4671784161a3256695e0cbcb9dc32ac47dc5b963[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Wed May 1 16:35:39 2024 -0700

    [Data] Retry `RaySystemError` application errors (#45079)
    
    Ray typically automatically retries system errors. However, in some
    cases, tasks raise `RaySystemError`s and those errors aren't
    automatically retried. To ensure Ray Data is fault tolerant to those
    failures, this PR explicitly adds `RaySystemError` to the list of
    retried exceptions.
    
    Note: one reason why tasks raise `RaySystemError`s is that when we shut
    down a node, the raylet process can die before worker processes and
    `ray.get()` throws an exception since it can't access plasma in raylet.
    A longterm solution would be to fix the shutdown order: raylet should be
    the last process to exit.
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit 2028e206ab4ec205e810a4411a6c9305403c2ed4[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 1 15:25:58 2024 -0700

    [ci] compute+store microcheck test coverage periodically (#45076)
    
    Compute + store microcheck test coverage periodically for all OSS teams
    
    Test:
    - CI
    - test build: https://buildkite.com/ray-project/postmerge/builds/4267
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit cc357098ded95690e0e3bb5988a99210ee777fad[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 1 14:52:33 2024 -0700

    [ray 2.20.0] update dask on ray version in docs (#45058)
    
    Update dask on ray version in docs
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit e1ec29ce6191365aa4f5fc271fceb5f946c7cb5f[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 1 14:01:19 2024 -0700

    Update shipped dependencies for 2.20.0 (#45077)
    
    generated by @khluu's automation
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 8f7dd2efa4f8312294abd2f045e9971035d985aa[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Wed May 1 21:12:50 2024 +0200

    [RLlib] Metrics do-over 03: Switch over `Learner` to new MetricsLogger API. (#44995)

[33mcommit 48e6fe92cebde9d44bd64b3d12f7f26d8dd5e8f7[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Wed May 1 11:46:53 2024 -0700

    [Docker] Update Docker Python dependencies (#44976)
    
    Update Docker Python 3.9 dependencies to commit 8fe3ac4
    
    ---------
    
    Signed-off-by: khluu <51931015+khluu@users.noreply.github.com>

[33mcommit a8b551d721c26669528020f303b9a7d14f6bae2d[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed May 1 09:45:39 2024 -0700

    [ci][micro/3] persist high impact test information (#45066)
    
    Add a 'is_high_impact' field for test object, and persist this
    information once we finish analyze its impact.
    
    A test is high impact if it often catches regressions on PRs.
    
    Test:
    - CI
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 514b24f1e3cef02569e4f99c6e62c976c4f686ff[m
Author: jackhumphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Tue Apr 30 19:27:34 2024 -0700

    Fix MutableObjectManager channel segfault (#45062)
    
    If one thread is holding a channel pointer while another thread attempts
    to register a new channel, the channel pointer could be invalidated.
    This is because absl::flat_hash_map does not provide pointer stability.
    This PR replaces absl::flat_hash_map with absl::node_hash_map, which
    does provider pointer stability.
    ---------
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit 62217fe448d5beb0cabdbe40804ec021fce37302[m
Author: Kai-Hsun Chen <kaihsun@anyscale.com>
Date:   Tue Apr 30 16:47:38 2024 -0700

    [CI] Fix linter installation instructions (#45065)
    
    install linter with checked in version constraints.

[33mcommit 23d05bb994797aafccc7593845d8c80102171076[m
Author: Josh Karpel <josh.karpel@gmail.com>
Date:   Tue Apr 30 17:11:09 2024 -0500

    Allow configuring Serve control loop interval, add related docs (#45063)
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    
    In our experiments, adjusting this value upward helps the Serve
    Controller keep up with a large number of autoscaling metrics pushes
    from a large number of `DeploymentHandle`s (because the loop body is
    blocking, so increasing the interval lets more other code when the
    control loop isn't running), at the cost of control loop responsiveness
    (since it doesn't run as often).
    
    ## Related issue number
    
    <!-- For example: "Closes #1234" -->
    
    Closes https://github.com/ray-project/ray/issues/44784 ... for now!
    
    ## Checks
    
    - [x] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [x] I've run `scripts/format.sh` to lint the changes in this PR.
    - [x] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [ ] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - [ ] Unit tests
       - [ ] Release tests
       - [x] This PR is not tested :(
    
    Signed-off-by: Josh Karpel <josh.karpel@gmail.com>

[33mcommit 33bde4c3345a39e99f70df6569b147bce902fcab[m
Author: Kai-Hsun Chen <kaihsun@anyscale.com>
Date:   Tue Apr 30 11:39:48 2024 -0700

    [Core] ray.init(logging_format) argument is ignored (#45037)
    
    #32741 accidentally removes the logging_format parameter from the setup_logging function. This PR overwrites the formatters for all default handlers.
    
    Signed-off-by: kaihsun <kaihsun@anyscale.com>

[33mcommit 26e22b1154739d69acc0215e82ce60fc1e71e18a[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Tue Apr 30 11:18:16 2024 -0700

    [ci] skip test_network_failure_e2e tests on windows (#45059)
    
    Skip the test_network_failure_e2e test on windows. It is already skipped
    on mac because of the `ha_integration` tag
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit bc7d565b19ac0961d39feb5c3097f14736d9dc80[m
Author: Cedric <ceddy4395@users.noreply.github.com>
Date:   Tue Apr 30 18:32:12 2024 +0200

    [ci] add timeout to github actions (#44990)
    
    so that the actions won't run for very long and can fail early when stalling.

[33mcommit e508b3ef716473a025e56b688906a10332e15959[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Tue Apr 30 23:25:17 2024 +0800

    [dashboard][perf] Change ray.get to await in dashboard async. (#45047)
    
    You should not use `ray.get` in async context.
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit 89a63930b0706535c22485cf2f35a66426b9596f[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Tue Apr 30 13:45:41 2024 +0200

    [RLlib] Fix bad assertion error in `PPO` when `use_kl_loss=False`. (#45031)

[33mcommit a45bfe30bb2d190d40bfc5d2c6c97060800c1dc6[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Tue Apr 30 11:09:42 2024 +0200

    [RLlib] - Get and set states in `MultiAgentEpisode` and `SingleAgentEpisode`. (#45012)

[33mcommit 180b60a67ca86291265625a3ba7832b9c62207ad[m
Author: Yash Thakkar <ythakkar97@gmail.com>
Date:   Tue Apr 30 00:08:27 2024 -0700

    [Docs] updating doc to add reference (#42771)
    
    Doc updated according to changes suggested in issue #36167. Made title similar to other title in same tree. Removed |: hugging face:|. Also added more context in doc as there are two python script present in doc where one is imported into another.

[33mcommit 145c15bf9caed0cf4de1b28c08da5119049d5d1d[m
Author: Peyton Murray <peynmurray@gmail.com>
Date:   Mon Apr 29 18:15:32 2024 -0700

    [Doc] Fix broken references in data documentation (#44956)
    
     fixes some bad references in Ray Data.

[33mcommit 63cd1aca146f3178d9f231db9e9889c10324e59a[m
Author: Peyton Murray <peynmurray@gmail.com>
Date:   Mon Apr 29 14:23:00 2024 -0700

    [Doc] Fix broken links in train documentation (#44953)
    
    Signed-off-by: pdmurray <peynmurray@gmail.com>

[33mcommit 489d699d263aba1f04e8a26645bb1ec1132ef609[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon Apr 29 12:53:26 2024 -0700

    [ray 2.12.0] release performance metrics (#45014)
    
    ray 2.12.0 performance metrics; we need to push this to the master
    branch post-release
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 7a396973107e5f786005edea0bd924190be3ff96[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Mon Apr 29 12:10:47 2024 -0700

    [ci] remove python 3.11 constraint for a couple of packages (#45020)
    
    Remove python 3.11 constraint from a few packages. We don't need these
    any more since we are using 3.11 compatible packages now. Update the
    compiled file as generated from buildkite.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit f59c553151b6e2ba94fec20f1d002d8a885253e8[m
Author: Cindy Zhang <cindyzyx9@gmail.com>
Date:   Mon Apr 29 11:57:28 2024 -0700

    [serve] fix lightweight update max ongoing requests (#45006)
    
    [serve] fix lightweight update max ongoing requests
    
    When a lightweight update occurs for a deployment and
    `max_ongoing_requests` is updated, two components need to be notified:
    1. Deployment handles, to know not to send more requests to a replica
    when it's reached its maximum
    2. Replicas, to know to reject requests when it's reached its maximum
    
    Right now we handle (1), but we don't handle (2), i.e. replicas aren't
    notified of the updated `max_ongoing_requests` for lightweight updates.
    The problem is that (1) is not strict enforcement of
    `max_ongoing_requests` since it relies on a cache that can be stale, so
    the current bug is that replicas aren't updated -> updated max is not
    fully enforced.
    
    This PR fixes that, and updates a test to fully test this behavior.
    
    Fixes https://github.com/ray-project/ray/issues/44975.
    
    
    Signed-off-by: Cindy Zhang <cindyzyx9@gmail.com>

[33mcommit 3e54ab2bcefef7fb6b1e6aa55109ad013bcd017f[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Tue Apr 30 02:39:19 2024 +0800

    [core] disable logger thread in test_unavailable_actors.py on macos. (#45029)
    
    This test now suffers from a gRPC issue: on macos, when the test case is shutting down in `ray.shutdown()`, the logger thread hangs. Before we figure out the nature of the issue, let's first deflake the test by disabling the logs.
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit 2ea1e9b6982735d3a46cc99d00f669ceaec95434[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Mon Apr 29 20:38:17 2024 +0200

    [RLlib] Rename `WorketSet` to `EnvRunnerGroup` (analogous to `LearnerGroup`). (#45011)

[33mcommit aa48647143ce56018c9043082a9eef519be2bfe2[m
Author: Yu-Chen Lai <139951533+evalaiyc98@users.noreply.github.com>
Date:   Tue Apr 30 02:33:27 2024 +0800

    [Doc] Remove Unnecessary option (#45034)
    
    The purpose of this PR is to simplify and clarify the usage of the kubectl port-forward command. The original documentation included the --address 0.0.0.0 option, which is used to specify forwarding the port to all available IP addresses.
    However, this is often unnecessary since kubectl port-forward defaults to forwarding the port to the local host.
    
    Signed-off-by: evalaiyc98 <evalaiyc98@gmail.com>

[33mcommit b891f3357bc075041db631c111e126c4cfb00340[m
Author: jackhumphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Mon Apr 29 10:06:34 2024 -0700

    Fix MutableObjectManager compile error on Windows (#45024)
    
    There were some issues with function definitions on Windows that this PR
    fixes. I also made style improvements to related code.
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>

[33mcommit e3fb472e8414318414ffc5d5fdbb68efc93942cf[m
Author: shrekris-anyscale <92341594+shrekris-anyscale@users.noreply.github.com>
Date:   Mon Apr 29 07:34:11 2024 -0700

    [Serve] Allow methods to pass type `@serve.batch` type hint (#45004)
    
    <!-- Thank you for your contribution! Please review
    https://github.com/ray-project/ray/blob/master/CONTRIBUTING.rst before
    opening a pull request. -->
    
    <!-- Please add a reviewer to the assignee section when you create a PR.
    If you don't have the access to it, we will shortly find a reviewer and
    assign them to your PR. -->
    
    ## Why are these changes needed?
    
    <!-- Please give a short summary of the change and the problem this
    solves. -->
    
    Without this change, `mypy` raises a type warning when decorating
    methods with `@serve.batch`:
    
    <img width="504" alt="Screenshot 2024-04-26 at 5 14 00 PM"
    src="https://github.com/ray-project/ray/assets/92341594/fd535d23-2a41-4f62-bb38-5f41a8bf53d5">
    
    With this change, `mypy` no longer raises a type warning for methods:
    
    <img width="505" alt="Screenshot 2024-04-26 at 5 14 35 PM"
    src="https://github.com/ray-project/ray/assets/92341594/b14c4167-30e9-417e-a920-d694629b8038">
    
    We should be aware that functions with an extra parameter before the
    input list will now pass the type check. This allows users to define a
    method outside a class and then assign it to a class:
    
    <img width="329" alt="Screenshot 2024-04-26 at 5 17 30 PM"
    src="https://github.com/ray-project/ray/assets/92341594/54043cf3-677a-48b8-a83b-10bec2ee6053">
    
    ## Related issue number
    
    <!-- For example: "Closes #1234" -->
    
    N/A
    
    ## Checks
    
    - [X] I've signed off every commit(by using the -s flag, i.e., `git
    commit -s`) in this PR.
    - [X] I've run `scripts/format.sh` to lint the changes in this PR.
    - [ ] I've included any doc changes needed for
    https://docs.ray.io/en/master/.
    - [ ] I've added any new APIs to the API Reference. For example, if I
    added a
    method in Tune, I've added it in `doc/source/tune/api/` under the
               corresponding `.rst` file.
    - [ ] I've made sure the tests are passing. Note that there might be a
    few flaky tests, see the recent failures at https://flakey-tests.ray.io/
    - Testing Strategy
       - This change relies on existing tests.
    
    Signed-off-by: Shreyas Krishnaswamy <shrekris@anyscale.com>

[33mcommit 8b41666b11cd6e53a358d7eb27c545b0ac7d3ca9[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Mon Apr 29 16:23:47 2024 +0200

    [RLlib] Use DEFAULT_MODULE_ID instead of DEFAULT_POLICY_ID everywhere on new API stack. (#45022)

[33mcommit 0b34086b2b33ad7803233c1c78f53ffb109398e4[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Mon Apr 29 16:23:32 2024 +0200

    [RLlib] Fix CI test: `examples/checkpoints/checkpoint_by_custom_criteria.py`. (#45030)

[33mcommit e23aa6e0b6381a695223daf97616d31572f1940f[m
Author: Huaiwei Sun <scottsun94@gmail.com>
Date:   Sun Apr 28 18:20:49 2024 -0600

    Update link of "Manage Ray on Anyscale" in ray doc UI (#45016)
    
    Change it back to anyscale website:
    - the preview sign-up form is available on anyscale website now
    - anyscale website will be the only link for getting access to hosted Anyscale Cloud down the road

[33mcommit 54bdf9b7c55925877ceb9d2cce23eb7af52cc12f[m
Author: jackhumphries <1645405+jackhumphries@users.noreply.github.com>
Date:   Sun Apr 28 11:02:45 2024 -0700

    Accelerated DAGs Multi-Node Support (#44094)
    
    This PR adds support for transferring mutable objects over the network via "channels". A writer creates a new channel, backed by a mutable object. Readers can in turn read from this channel.
    
    There is always one writer though there could be one or more readers. If the writer and the readers are on the same node, information is shared through the channel via shared memory. There is a single mutable object shared by both sides.
    
    If they are on different nodes, the data is transferred via gRPC. There is a mutable object on the writer side and a different mutable object on the reader side. There is a polling thread on the writer side that listens for changes to the writer's mutable object and then sends an RPC. Upon receipt of the RPC on the reader side, the data is written to the readers' mutable object.
    
    Here is the workflow:
    
        Writer creates chan = Channel().
            writer allocates writer ref.
            if writer node ID != reader node ID:
                writer call remote reader and has it create reader ref
                reader raylet allocates a local "reader ref".
                writer waits for reply. store reader ref.
                Reader raylet maps (writer ref) -> (reader ref, num_readers).
        As long as reader ref is set, chan can be serialized. Otherwise, throw error.
    
    ---------
    
    Signed-off-by: Jack Humphries <1645405+jackhumphries@users.noreply.github.com>
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>
    Co-authored-by: Stephanie Wang <swang@cs.berkeley.edu>

[33mcommit 1b3610307a86f1948e2473a48fa9a744b5d8284c[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Sat Apr 27 17:23:33 2024 +0200

    [RLlib] Cleanup `ActorManager` and `WorkerSet`: Make all `mark_healthy`/`healthy_only` method args `True` by default. (#44993)

[33mcommit 2ca00e0596d9f9fe370c3bb35e1e87a7dcda9a75[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Sat Apr 27 09:18:37 2024 +0200

    [RLlib] AlgorithmConfig cleanup 03: Cleaner names and structuring of API-stack config settings. (#44920)

[33mcommit bac5d5c04b4510583cb8c61c94c9f09a5b13a3b7[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Sat Apr 27 13:09:47 2024 +0800

    [dashboard] remove GlobalSignals (#44900)
    
    It seems nobody is using them.
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit ff62312d95de96c32b3925cb1fb0911caec51ee2[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Fri Apr 26 18:00:55 2024 -0700

    [Data] Make internal UDF names more descriptive (#44985)
    
    APIs like `select_columns` call `map_batches` under-the-hood and use
    functions with non-descriptives names. For example, if you call
    `select_columns`, you'd see something like this in the progress bar:
    
    ```
    ReadRange->MapBatches(fn)
    ```
    
    To prevent confusion (e.g., what is `fn`?), this PR makes the function
    names more descriptive.

[33mcommit 10f7f2ad7ef7f764a824c90695faec5df3be1e96[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Fri Apr 26 16:46:58 2024 -0700

    [Data] Deprecate `prefetch_batches` arg of `iter_rows` and change default value (#44982)
    
    This PR deprecates the `prefetch_batches` parameter of
    `Dataset.iter_rows` because it leaks an implementation detail (namely,
    that we use `Dataset.iter_batches` under-the-hood). This PR also
    increases the default value for 1) consistency with `iter_batches` and
    2) to improve performance.
    
    For historical context, https://github.com/ray-project/ray/pull/43349
    erroneously introduced the `prefetch_batches` parameter.
    
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit dc355870d5920f2f9e30343528f1041187b56abd[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri Apr 26 16:01:28 2024 -0700

    [ci] pass RAYCI_BISECT_RUN=1 to bisect run (#44999)
    
    As title, when this en variable is set, macos_ci.sh will not upload
    bazel test results into test db
    (https://github.com/ray-project/ray/blob/master/ci/ray_ci/macos/macos_ci.sh#L118).
    We need this set otherwise, bisect will upload its test run results to
    test db and pollute the data. Check
    https://github.com/ray-project/ray/issues/44729#issuecomment-2079950082,
    it commented the blame PR and then set the test to PASSING
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit a89195e6bfae76bbcb028407c5372ebd2c7348e5[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri Apr 26 15:55:31 2024 -0700

    [ci] reduce rllib example test parallelism (#45001)
    
    The rllib example tests are getting more flaky than usual. Reduce
    parallelism to see if it helps. Many of these tests are asking for 4
    cpus: https://github.com/ray-project/ray/blob/master/rllib/BUILD#L2232
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 442805a69751c5dd80ea9f3ac4de6e573f336b08[m
Author: Marwan Sarieddine <sarieddine.marwan@gmail.com>
Date:   Fri Apr 26 15:54:44 2024 -0700

    [core] update num_returns type annotation to allow for 'streaming' (#40914)
    
    To avoid mypy errors when passing num_returns="streaming"
    
    Signed-off-by: Marwan Sarieddine <sarieddine.marwan@gmail.com>

[33mcommit b0a0d34f5383db476ef0026f2b3e736c7a78084d[m
Author: Hongchao Deng <hongchaodeng1@gmail.com>
Date:   Fri Apr 26 15:42:36 2024 -0700

    [Core] Fix task submission never return when network partition happens (#44692)
    
    This fixes the problem that PushTask() grpc call is hanging when network partition happens. This grpc call hang because by default grpc sends two ping frames and then it won't send anything if no data frame sent. Meanwhile, the worker node was taking a force shutdown.
    
    Signed-off-by: hongchaodeng <hongchaodeng1@gmail.com>

[33mcommit 6d6d0a1c53be636a7cbe5595d1b1286601a32125[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Fri Apr 26 13:20:31 2024 -0700

    [core] fix workflow tests (#44994)
    
    Fix workflow tests. The web service it used to compute fibonacci is
    completely dead now.
    
    Test:
    - CI
    - python
    python/ray/workflow/examples/comparisons/prefect/compute_fib_workflow.py
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 6588ed06762fad60afbbc270825b27bbfbaa7ec3[m
Author: Matti Picus <matti.picus@gmail.com>
Date:   Sat Apr 27 05:56:35 2024 +1000

    [Core] Add more tests for s3 url with non-ascii characters (#44949)
    
    Add a test to make sure all possible s3 storage URLs are passed through to the worker properly. They appear on the command line as arguments to the --storage command line parameter, so may need special treatment to pass shell parsing.
    
    Signed-off-by: Matti Picus <matti.picus@gmail.com>

[33mcommit 18122ffd24e299c64eea885e92b7966e0f13227b[m
Author: Yunxuan Xiao <yunxuanx@anyscale.com>
Date:   Fri Apr 26 12:44:07 2024 -0700

    [Train][Observability] Track Train Run Info with `TrainStateActor` (#44585)
    
    Adds the `TrainStateActor` to collect Train Run metadata to populate the Train Dashboard.
    
    ---------
    
    Signed-off-by: woshiyyya <xiaoyunxuan1998@gmail.com>
    Signed-off-by: yunxuanx <yunxuanx@anyscale.com>
    Signed-off-by: Yunxuan Xiao <yunxuanx@anyscale.com>
    Signed-off-by: Yunxuan Xiao <xiaoyunxuan1998@gmail.com>
    Co-authored-by: matthewdeng <matthew.j.deng@gmail.com>
    Co-authored-by: Justin Yu <justinvyu@anyscale.com>

[33mcommit 4006c4f9d1638d394371ac9f8d28d8abc8765903[m
Author: terraflops1048576 <peter.wang9812@outlook.com>
Date:   Fri Apr 26 14:00:54 2024 -0500

    [Core] Fix typo in function name pasre_pg_formatted_resources_to_original (#44996)
    
    Signed-off-by: Peter Wang <peter.wang9812@gmail.com>

[33mcommit f6ba2e7167c8a2ac01352bc479b113e9bc3d58aa[m
Author: Andrew Sy Kim <andrewsy@google.com>
Date:   Fri Apr 26 13:46:11 2024 -0400

    [KubeRay][Docs] Simplify KubeRay upgrade steps and always upgrade CRDs first (#44826)
    
    Simplifes the KubeRay upgrade steps and strongly recommends upgrading CRDs first. Also removes recommendation for deleting CRDs as this will result in RayCluster, RayJob and RayService resources being deleted.
    
    Signed-off-by: Andrew Sy Kim <andrewsy@google.com>

[33mcommit 743830e096ba824e7f3158bc1f50cf6fbfb13cda[m
Author: abizjakpro <42094158+abizjakpro@users.noreply.github.com>
Date:   Fri Apr 26 19:37:39 2024 +0200

    [Core] Fix incorrect use of ssh port forward option. (#44973)
    
    This fixes the order of ports, making the port option (-p) of "ray dashboard" command actually work.
    
    Signed-off-by: Ambroz Bizjak <abizjak.pro@gmail.com>

[33mcommit 4c586073cfeadf817e04c79cfea4b5669d3fafb1[m
Author: Matthew Owen <mowen@anyscale.com>
Date:   Fri Apr 26 10:35:19 2024 -0700

    [Data] Adding in default behavior to false for creating dirs on s3 writes (#44972)
    
    We should skip creating directories in s3 unless the user specifically overrides this behavior. PyArrow's s3fs implementation might collide with restrictive IAM permissions and skipping the create_dir call will prevent some of these errors.
    
    Signed-off-by: Matthew Owen <mowen@anyscale.com>

[33mcommit 90766c38d69749eb1e761a035e14167c349fca8d[m
Author: Marcelo Carmona <marcelo@marcelocarmona.com>
Date:   Fri Apr 26 10:02:52 2024 -0700

    [doc][dashboard] add npm ci in docs (#39123)
    
    These changes are added to help users understand how to set up the project environment correctly.

[33mcommit 20323fe130bb55faa81a4fa4696979e1de3f624d[m
Author: Hongchao Deng <hongchaodeng1@gmail.com>
Date:   Fri Apr 26 09:56:19 2024 -0700

    [core] increase GCS timeout for GetAllNodeInfo RPC (#44986)
    
    High load on the dashboard.py process could cause GetAllNodeInfoRequest RPC to GCS timeout and dead nodes not getting updated.
    
    This will further create extra load on dashboard server. Short term fix is to increase the timeout. In long term, we need to separate system and user endpoints.
    
    Signed-off-by: hongchaodeng <hongchaodeng1@gmail.com>

[33mcommit 591f5267399f6431b3f7f33a532989b64a90b07d[m
Author: Samuel Chan <116198444+anyscalesam@users.noreply.github.com>
Date:   Fri Apr 26 08:37:08 2024 -0700

    [doc] update ray-tracing.rst (#44929)
    
    some word rephrasing.

[33mcommit 0e8ef339ea3843a6a9bfcf34c5f8018bfa869fe5[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Fri Apr 26 11:14:53 2024 +0200

    [RLlib] Fix test case `test_envs_that_crash`. (#44989)

[33mcommit 5650610774631cb40648d99dad1e2f5eac9db614[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Fri Apr 26 11:14:09 2024 +0200

    [RLlib] Make deprecated AlgorithmConfig properties NOT error out when written to (just warn). (#44988)

[33mcommit dc82ba83ffd11858805807884326659680240fb7[m
Author: Abirdcfly <fp544037857@gmail.com>
Date:   Fri Apr 26 14:22:55 2024 +0800

    [tune] fixes minor doc format issues (#44865)
    
    on quote matching

[33mcommit c4dbc58882c2755eacb115bcc4ae9807ce0970a7[m
Author: Matthew Franglen <matthew@brandwatch.com>
Date:   Fri Apr 26 07:15:58 2024 +0100

    Update ray-generator.rst to fix typo (#44705)
    
    fixes a typo in the ray generators documentation page.

[33mcommit 3a49a3662d7bcae245790c9a65e5edb9a9e8eb4d[m
Author: Ruiyang Wang <56065503+rynewang@users.noreply.github.com>
Date:   Fri Apr 26 13:25:03 2024 +0800

    [core] Unsubscribe PythonGcsSubscriber from GCS pubsub on exit. (#44837)
    
    Signed-off-by: Ruiyang Wang <rywang014@gmail.com>

[33mcommit fbd5c459245e8967d57fa90a1608cd798f1f606d[m
Author: Chi-Sheng Liu <chishengliu@chishengliu.com>
Date:   Fri Apr 26 12:16:03 2024 +0800

    [Docs] Code block does not rendered for setup pre-commit (#44589)
    
    under the documentation Pre-commit Hooks section, the code blocks were not properly rendered. now they are

[33mcommit fecc93994a5331378158d8bc5e6fe37d52436767[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu Apr 25 17:07:15 2024 -0700

    [ci] move more rllib tests to large size (#44978)
    
    I see a few more timed out rllib tests, move more to large size and run
    serially
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 258ca8aa5c799092787d753234490346e17ae39b[m
Author: Kevin H. Luu <khluu000@gmail.com>
Date:   Thu Apr 25 17:02:15 2024 -0700

    [release] Update Dask on Ray version for 2.12.0 release (#44974)
    
    Add Dask on Ray version for 2.12.0 release
    
    Signed-off-by: khluu <51931015+khluu@users.noreply.github.com>

[33mcommit 9406426c3692b5d84fb13cec0e99fd91cf3efe18[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu Apr 25 16:23:08 2024 -0700

    [ci][micro/2] determine tests for microcheck (#44912)
    
    Preliminary logic to determine tests for microcheck. It determine the
    minimal number of tests to run to cover a historical of X% failed PRs
    
    Test:
    - CI
    
    > bazel run //ci/ray_ci/automation:determine_microcheck_tests -- core 90
    --test-history-length 100
    
    
    > [INFO 2024-04-22 21:58:20,840] determine_microcheck_tests.py: 22
    Analyzing 362 tests for team core
    > [INFO 2024-04-22 22:23:31,083] determine_microcheck_tests.py: 29 To
    cover 90% of PRs, run the following tests:
    {'linux://python/ray/_private:doctest',
    'linux://python/ray/tests:test_task_events',
    'linux://python/ray/tests:test_client_library_integration',
    'linux://python/ray/tests:test_tensorflow',
    'linux://python/ray/tests:test_streaming_generator',
    'linux://python/ray/tests:test_chaos',
    'linux://python/ray/dag:test_accelerated_dag',
    'linux://python/ray/tests:test_ray_init_2',
    'linux://python/ray/tests:test_gcs_ha_e2e_2',
    'linux://python/ray/tests:test_runtime_env_container',
    'linux://python/ray/tests:test_runtime_env_complicated',
    'linux://python/ray/tests:test_gcs_ha_e2e',
    'linux://python/ray/autoscaler:doctest',
    'linux://python/ray/tests:test_output',
    'linux://python/ray/tests:test_top_level_api',
    'linux://python/ray/tests:test_placement_group_4',
    'linux://python/ray/tests:test_unavailable_actors',
    'linux://python/ray/tests:test_channel',
    'linux://python/ray/tests:test_multi_node_3',
    'linux://python/ray/dag:doctest'}
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit a66e3a6aa29b8cf7e9a67cfd7e2a63e941be8a29[m
Author: Rui Qiao <161574667+ruisearch42@users.noreply.github.com>
Date:   Thu Apr 25 14:45:35 2024 -0700

    [Core] Create node_id at Python Node __init__ and pass to raylet (#44721)
    
    After ray processes are started during ray.init() or ray.up(), the script/worker should connects to the raylet it just started.
    However currently the raylet is looked up based on IP address, and it might be possible that there exists another raylet with the same IP address, and as a result, a different raylet is connected.
    
    This PR addresses this issue by creating node_id at Node __init__ time, and pass it down and set it at raylet. We also look up raylet with node_id which is unique.
    
    Signed-off-by: Rui Qiao <ruisearch42@gmail.com>

[33mcommit 65d017eade883ce227dac25e6eab3fc9db17f833[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu Apr 25 12:11:54 2024 -0700

    [ci] mark some rllib tests as running with all core (#44952)
    
    Talked offline with @sven1977 about some of the rllib flaky tests. He
    suggested to increase timed out. I also mark them as running with all
    core (avoid running in parallel with other tests).
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 8fe3ac4d97874f6e1ff5da7407b13bc3552f6233[m
Author: Justin Yu <justinvyu@anyscale.com>
Date:   Thu Apr 25 11:00:38 2024 -0700

    [train] Setup xgboost `CommunicatorContext` automatically (#44883)
    
    Automatically set up the xgboost `CommunicatorContext`
    for users so they don't have to call it manually in their training code.
    
    ---------
    
    Signed-off-by: Justin Yu <justinvyu@anyscale.com>

[33mcommit 10ec6148e3879d99952ea9963046e11da99462b3[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu Apr 25 19:49:34 2024 +0200

    [RLlib] AlgorithmConfig cleanup 02: Restructure methods and properties. (#44896)

[33mcommit 4d461b83bb2556714b4b7e7f82cd951545b94b19[m
Author: Rueian <rueiancsie@gmail.com>
Date:   Fri Apr 26 01:35:35 2024 +0800

    KubeRay Istio mTLS and L7 observability Guide (#44801)
    
    This PR adds a guide to run a KubeRay RayCluster with Istio mTLS + L7 observability enabled.
    
    Signed-off-by: Rueian <rueiancsie@gmail.com>

[33mcommit 49cefec1ffa2e186db7a9bef91acd793b73b430f[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu Apr 25 10:24:42 2024 -0700

    [ci][bisect/5] final wiring bisect triggering for macos tests (#44808)
    
    Final wiring bisect triggering from a macosx test become consistently
    failing. A few changes:
    - Add test_type. A test_type is based on the prefix in the test name.
    Send the test_type to the bisect pipeline. The pipeline will knows what
    type of bisect to trigger from there.
    - Have bisect rate limit based on different test type. Start with 3
    macosx test bisect a day.
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 607475c04a4b427f1650333c350c57ff7cb53f9f[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Thu Apr 25 09:21:31 2024 -0700

    [ci] pin rayci and wanda version (#44960)
    
    use released binaries, faster and cheaper, and also more stable / hermetic.
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 865d24709f5767ccd060b52d25fce41abae08b4c[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Thu Apr 25 07:03:35 2024 -0700

    [data] move raydp to test requirements (#44962)
    
    so that it won't be built inside the image. this also stops building
    pyspark into ray-ml images.
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit 2958ac42c2dccaadc262f818262857c3cd3c2234[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Thu Apr 25 06:54:06 2024 -0700

    [ci] run flaky macos twice (#44958)
    
    As we're moving macos tests to period run, let's run flaky macos test
    twice so we have enough signals to them out of flaky state quicker.
    
    Test:
    - CI
    
    Signed-off-by: can <can@anyscale.com>

[33mcommit 97e910b51f0a4cbec5d08488b6fdb5386c100dad[m
Author: simonsays1980 <simon.zehnder@gmail.com>
Date:   Thu Apr 25 14:55:17 2024 +0200

    [RLlib] Implementation of `MultiAgentEpisodeReplayBuffer` for the new API stack. (#44450)

[33mcommit 611e7d550922188586fb66693f897f5578cdfcd8[m
Author: Sven Mika <svenmika1977@gmail.com>
Date:   Thu Apr 25 14:37:59 2024 +0200

    [RLlib] Metrics do-over 02: Use new MetricsLogger in `PPO.training_step()` and `EnvRunner.get_metrics()`. (#44888)

[33mcommit 5f2d45bf5e9375bd0986d9a482f95cc6b646c7fe[m
Author: Owe u <tongruizhe@163.com>
Date:   Thu Apr 25 18:30:48 2024 +0800

    [dashboard] Fix dashboard stack trace error when sudo is not found (#43857)
    
    When Ray runs on k8s with the images that does not install "sudo" and runs as non-root in containers, the "Stack Trace (Driver)" of the dashboard goes wrong and returns "sudo FileNotFound". In fact, py-spy can be used even if sudo is not installed.
    The code previous forget to handle the case where the sudo FileNotFound exception is thrown and directly returns it to the user. This PR fixes this issue, treat sudo not found as "cannot do passwordless sudo"

[33mcommit 6f6a5762c9f09f244017a157bf191641bea3c674[m
Author: Lonnie Liu <95255098+aslonnie@users.noreply.github.com>
Date:   Wed Apr 24 22:56:20 2024 -0700

    [req] update everything to /ray/ci in the compiled req file (#44963)
    
    follows the golden path of requirements update
    
    Signed-off-by: Lonnie Liu <lonnie@anyscale.com>

[33mcommit bef05002a4b0e1afdc65a78532e0c8dea8bc7c9b[m
Author: Yunxuan Xiao <yunxuanx@anyscale.com>
Date:   Wed Apr 24 17:35:49 2024 -0700

    [Doc] Add a note to build with "bazelisk" or "bazel==5.4.1". (#44777)
    
    
    Signed-off-by: yunxuanx <yunxuanx@anyscale.com>
    Signed-off-by: Yunxuan Xiao <xiaoyunxuan1998@gmail.com>

[33mcommit 0da794cafdc4dbc09e5d1e979782921d0b59665d[m
Author: Hongpeng Guo <hpguo@anyscale.com>
Date:   Wed Apr 24 16:56:08 2024 -0700

    [Doc][Train] Add `accelerator_type` to Ray Train user guide (#44882)
    
    Document the new `ScalingConfig(accelerator_type)` configuration.
    
    Signed-off-by: Hongpeng Guo <hpguo@anyscale.com>

[33mcommit 2890cd00d5deedbab84c3b131bc165cc6d2ee38f[m
Author: Balaji Veeramani <balaji@anyscale.com>
Date:   Wed Apr 24 16:30:25 2024 -0700

    [Data] Remove dead ESTIMATED_SAFE_MEMORY_FRACTION constant (#44957)
    
    ESTIMATED_SAFE_MEMORY_FRACTION isn't used anywhere, so this PR removes it (it's been superseded by ResourceManager.DEFAULT_OBJECT_STORE_MEMORY_LIMIT_FRACTION).
    
    Signed-off-by: Balaji Veeramani <balaji@anyscale.com>

[33mcommit a1590725a8cc8a47734ee8676da4e6a8fbb5548a[m
Author: Cindy Zhang <cindyzyx9@gmail.com>
Date:   Wed Apr 24 15:22:00 2024 -0700

    [serve] add script for comparing perf metrics (#44938)
    
    Add script that can:
    * output the comparison between the performance metrics from two release test output files.
    * fetch release test results from latest nightly run on master
    
    Usage:
    ```
    ./release_utils.py compare-perf RESULTS_FILE1 RESULTS_FILE2
    ```
    
    Example output:
    ```
    |metric                        |results 1      |results 2      |%change   |
    |------------------------------|---------------|---------------|----------|
    |http_p50_latency              |11.08          |11.63          |4.9       |
    |http_p90_latency              |17.24          |17.71          |2.75      |
    |http_p95_latency              |19.19          |20.12          |4.87      |
    |http_p99_latency              |22.7           |25.29          |11.44     |
    |http_1mb_p50_latency          |11.82          |12.78          |8.12      |
    |http_1mb_p90_latency          |18.78          |19.59          |4.32      |
    |http_1mb_p95_latency          |21.55          |22.79          |5.75      |
    |http_1mb_p99_latency          |32.36          |26.53          |-18.0     |
    |http_10mb_p50_latency         |17.57          |18.04          |2.65      |
    |http_10mb_p90_latency         |25.32          |26.31          |3.88      |
    |http_10mb_p95_latency         |28.41          |30.15          |6.14      |
    |http_10mb_p99_latency         |35.19          |37.68          |7.08      |
    |http_avg_rps                  |204.2          |195.04         |-4.49     |
    |http_throughput_std           |10.59          |10.05          |-5.1      |
    |grpc_p50_latency              |7.97           |8.84           |11.03     |
    |grpc_p90_latency              |12.89          |16.0           |24.14     |
    |grpc_p95_latency              |15.1           |19.05          |26.21     |
    |grpc_p99_latency              |21.11          |25.19          |19.3      |
    |grpc_1mb_p50_latency          |17.65          |19.92          |12.85     |
    |grpc_1mb_p90_latency          |24.59          |28.3           |15.1      |
    |grpc_1mb_p95_latency          |27.62          |32.11          |16.27     |
    |grpc_1mb_p99_latency          |34.33          |40.01          |16.57     |
    |grpc_10mb_p50_latency         |142.4          |153.89         |8.07      |
    |grpc_10mb_p90_latency         |171.29         |196.54         |14.74     |
    |grpc_10mb_p95_latency         |180.63         |208.3          |15.32     |
    |grpc_10mb_p99_latency         |203.08         |228.68         |12.61     |
    |grpc_avg_rps                  |203.35         |211.01         |3.77      |
    |grpc_throughput_std           |11.9           |18.37          |54.37     |
    |handle_p50_latency            |4.89           |4.08           |-16.52    |
    |handle_p90_latency            |8.33           |7.07           |-15.17    |
    |handle_p95_latency            |10.29          |8.81           |-14.38    |
    |handle_p99_latency            |14.3           |11.08          |-22.5     |
    |handle_1mb_p50_latency        |11.58          |10.91          |-5.85     |
    |handle_1mb_p90_latency        |17.04          |16.73          |-1.86     |
    |handle_1mb_p95_latency        |19.41          |18.97          |-2.29     |
    |handle_1mb_p99_latency        |22.92          |26.54          |15.78     |
    |handle_10mb_p50_latency       |65.54          |67.52          |3.02      |
    |handle_10mb_p90_latency       |83.53          |84.07          |0.65      |
    |handle_10mb_p95_latency       |90.7           |93.42          |3.0       |
    |handle_10mb_p99_latency       |106.93         |104.65         |-2.13     |
    |handle_avg_rps                |394.57         |404.85         |2.61      |
    |handle_throughput_std         |22.09          |23.86          |8.01      |
    ```
    
    The output can also be directly copy-pasted into a github PR and it will be formatted as a human-readable table. e.g. the above becomes:
    
    |metric                        |results 1      |results 2      |%change   |
    |------------------------------|---------------|---------------|----------|
    |http_p50_latency              |11.08          |11.63          |4.9       |
    |http_p90_latency              |17.24          |17.71          |2.75      |
    |http_p95_latency              |19.19          |20.12          |4.87      |
    |http_p99_latency              |22.7           |25.29          |11.44     |
    |http_1mb_p50_latency          |11.82          |12.78          |8.12      |
    |http_1mb_p90_latency          |18.78          |19.59          |4.32      |
    |http_1mb_p95_latency          |21.55          |22.79          |5.75      |
    |http_1mb_p99_latency          |32.36          |26.53          |-18.0     |
    |http_10mb_p50_latency         |17.57          |18.04          |2.65      |
    |http_10mb_p90_latency         |25.32          |26.31          |3.88      |
    |http_10mb_p95_latency         |28.41          |30.15          |6.14      |
    |http_10mb_p99_latency         |35.19          |37.68          |7.08      |
    |http_avg_rps                  |204.2          |195.04         |-4.49     |
    |http_throughput_std           |10.59          |10.05          |-5.1      |
    |grpc_p50_latency              |7.97           |8.84           |11.03     |
    |grpc_p90_latency              |12.89          |16.0           |24.14     |
    |grpc_p95_latency              |15.1           |19.05          |26.21     |
    |grpc_p99_latency              |21.11          |25.19          |19.3      |
    |grpc_1mb_p50_latency          |17.65          |19.92          |12.85     |
    |grpc_1mb_p90_latency          |24.59          |28.3           |15.1      |
    |grpc_1mb_p95_latency          |27.62          |32.11          |16.27     |
    |grpc_1mb_p99_latency          |34.33          |40.01          |16.57     |
    |grpc_10mb_p50_latency         |142.4          |153.89         |8.07      |
    |grpc_10mb_p90_latency         |171.29         |196.54         |14.74     |
    |grpc_10mb_p95_latency         |180.63         |208.3          |15.32     |
    |grpc_10mb_p99_latency         |203.08         |228.68         |12.61     |
    |grpc_avg_rps                  |203.35         |211.01         |3.77      |
    |grpc_throughput_std           |11.9           |18.37          |54.37     |
    |handle_p50_latency            |4.89           |4.08           |-16.52    |
    |handle_p90_latency            |8.33           |7.07           |-15.17    |
    |handle_p95_latency            |10.29          |8.81           |-14.38    |
    |handle_p99_latency            |14.3           |11.08          |-22.5     |
    |handle_1mb_p50_latency        |11.58          |10.91          |-5.85     |
    |handle_1mb_p90_latency        |17.04          |16.73          |-1.86     |
    |handle_1mb_p95_latency        |19.41          |18.97          |-2.29     |
    |handle_1mb_p99_latency        |22.92          |26.54          |15.78     |
    |handle_10mb_p50_latency       |65.54          |67.52          |3.02      |
    |handle_10mb_p90_latency       |83.53          |84.07          |0.65      |
    |handle_10mb_p95_latency       |90.7           |93.42          |3.0       |
    |handle_10mb_p99_latency       |106.93         |104.65         |-2.13     |
    |handle_avg_rps                |394.57         |404.85         |2.61      |
    |handle_throughput_std         |22.09          |23.86          |8.01      |
    
    Example usage:
    ```
    ./release_utils.py fetch-nightly TEST_NAME -o OUTPUT_PATH
    ```
    
    I also added options to the release tests `microbenchmarks.py`, `autoscaling_load_test.py`, and `replica_scalability.py` so that they can be more easily run locally, and the release test output can be saved to a filepath of your choice with `-o output_path`. This can be helpful if we want to quickly run the microbenchmarks locally in the future and compare against some other results.
    
    Signed-off-by: Cindy Zhang <cindyzyx9@gmail.com>

[33mcommit 863dc2392ffb0aacdc507a45b12c3cd570e2930f[m
Author: Cindy Zhang <cindyzyx9@gmail.com>
Date:   Wed Apr 24 12:06:15 2024 -0700

    [serve] run all serve release tests in isolated cloud (#44939)
    
    Run all release test jobs, and the any services they start, in the cloud `serve_release_tests_cloud`. This provides better isolation for our release tests.
    
    Signed-off-by: Cindy Zhang <cindyzyx9@gmail.com>

[33mcommit a7aeff6ff1a9fdee9cb2b37a4b4c82e620cc10e0[m
Author: Stephanie Wang <swang@cs.berkeley.edu>
Date:   Wed Apr 24 11:46:15 2024 -0700

    [core] Report GCS internal pubsub buffer metrics and cap message size (#44749)
    
    GCS runs a pubsub server for all other Ray processes. In large clusters, there can be a lot of pubsub messages buffered at GCS. A couple channels (logs and error info) are already configured to drop messages after a certain size, but others are not capped. If too many messages are buffered, we end up with high memory pressure. Since messages are batched into RPC replies, we can also run into the protobuf serialization limit (2GB) if there are too many buffered messages to batch.
    
    This PR adds the following mitigations:
    
        Add DebugString() to pubsub module so that we can at least see how much messages and memory is buffered per channel. Previously this was not set for the GCS so there was no visibility into the memory usage.
        Drop individual publish messages that are too large.
        When batching multiple publish messages into one reply, limit the batch to 1GB to avoid the protobuf serialization error.
        Bump up per-channel memory limit to 1GB. This applies to logs and error info reported by Ray worker nodes.
    
    Related issue number
    
    Closes #44655.
    
    ---------
    
    Signed-off-by: Stephanie Wang <swang@cs.berkeley.edu>

[33mcommit 20162358440d34c084eedd52bdbb2264bc72bf32[m
Author: Jiajun Yao <jeromeyjj@gmail.com>
Date:   Wed Apr 24 11:39:12 2024 -0700

    [Core] GCS based pubsub is always enabled so there is no need to check its enableness (#44945)
    
    We no longer have redis based pubsub so gcs based pubsub is the only option and is always enabled.
    
    Signed-off-by: Jiajun Yao <jeromeyjj@gmail.com>

[33mcommit 5e477ff25564fe954322c0611c2920e95ae1e178[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed Apr 24 09:01:33 2024 -0700

    Revert "[serve] change cloud that release test services run in (#44930)" (#44951)
    
    This reverts commit 00f64f34ff66e14103fea62ed2bffe872cc799b9.

[33mcommit a1c36195b06e47a730e7e72a792fb82e0d6f1622[m
Author: Cuong Nguyen <128072568+can-anyscale@users.noreply.github.com>
Date:   Wed Apr 24 07:14:00 2024 -0700

    [ci][bisect/4] move bisect logic to state machine base class (#44807)
    
    Move bisect logic to state machine base class. Purely moving things over. This is to prepare for reusing this logic for macos tests.
    
    ---------
    
    Signed-off-by: can <can@anyscale.com>
